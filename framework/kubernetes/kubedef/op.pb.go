// Copyright 2022 Namespace Labs Inc; All rights reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: framework/kubernetes/kubedef/op.proto

package kubedef

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	schema "namespacelabs.dev/foundation/schema"
	runtime "namespacelabs.dev/foundation/schema/runtime"
	resources "namespacelabs.dev/foundation/std/resources"
	types "namespacelabs.dev/foundation/std/types"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OpApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The serialized resource that is being applied.
	BodyJson string `protobuf:"bytes,4,opt,name=body_json,json=bodyJson,proto3" json:"body_json,omitempty"`
	// If true, sets the namespace of the resource to that of the deployment's scope.
	// The namespace must not be set in the serialized resource above.
	SetNamespace bool `protobuf:"varint,8,opt,name=set_namespace,json=setNamespace,proto3" json:"set_namespace,omitempty"`
	// If true, creates resources without emitting user-visible events.
	InhibitEvents bool `protobuf:"varint,9,opt,name=inhibit_events,json=inhibitEvents,proto3" json:"inhibit_events,omitempty"`
	// If this apply is done in the scope of a planned deployment, deployable will be set.
	Deployable *runtime.Deployable `protobuf:"bytes,10,opt,name=deployable,proto3" json:"deployable,omitempty"`
	// If set, specifies which package yielded this apply. Used for presentation purposes.
	Creator                  *schema.PackageRef                `protobuf:"bytes,11,opt,name=creator,proto3" json:"creator,omitempty"`
	CheckGenerationCondition *OpApply_CheckGenerationCondition `protobuf:"bytes,7,opt,name=check_generation_condition,json=checkGenerationCondition,proto3" json:"check_generation_condition,omitempty"`
}

func (x *OpApply) Reset() {
	*x = OpApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpApply) ProtoMessage() {}

func (x *OpApply) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpApply.ProtoReflect.Descriptor instead.
func (*OpApply) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_op_proto_rawDescGZIP(), []int{0}
}

func (x *OpApply) GetBodyJson() string {
	if x != nil {
		return x.BodyJson
	}
	return ""
}

func (x *OpApply) GetSetNamespace() bool {
	if x != nil {
		return x.SetNamespace
	}
	return false
}

func (x *OpApply) GetInhibitEvents() bool {
	if x != nil {
		return x.InhibitEvents
	}
	return false
}

func (x *OpApply) GetDeployable() *runtime.Deployable {
	if x != nil {
		return x.Deployable
	}
	return nil
}

func (x *OpApply) GetCreator() *schema.PackageRef {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *OpApply) GetCheckGenerationCondition() *OpApply_CheckGenerationCondition {
	if x != nil {
		return x.CheckGenerationCondition
	}
	return nil
}

type OpEnsureDeployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployable              *runtime.Deployable          `protobuf:"bytes,1,opt,name=deployable,proto3" json:"deployable,omitempty"`
	SerializedResource      string                       `protobuf:"bytes,2,opt,name=serialized_resource,json=serializedResource,proto3" json:"serialized_resource,omitempty"`
	SetNamespace            bool                         `protobuf:"varint,3,opt,name=set_namespace,json=setNamespace,proto3" json:"set_namespace,omitempty"`
	InhibitEvents           bool                         `protobuf:"varint,4,opt,name=inhibit_events,json=inhibitEvents,proto3" json:"inhibit_events,omitempty"`
	ConfigurationVolumeName string                       `protobuf:"bytes,5,opt,name=configuration_volume_name,json=configurationVolumeName,proto3" json:"configuration_volume_name,omitempty"`
	SetContainerField       []*runtime.SetContainerField `protobuf:"bytes,6,rep,name=set_container_field,json=setContainerField,proto3" json:"set_container_field,omitempty"`
}

func (x *OpEnsureDeployment) Reset() {
	*x = OpEnsureDeployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpEnsureDeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpEnsureDeployment) ProtoMessage() {}

func (x *OpEnsureDeployment) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpEnsureDeployment.ProtoReflect.Descriptor instead.
func (*OpEnsureDeployment) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_op_proto_rawDescGZIP(), []int{1}
}

func (x *OpEnsureDeployment) GetDeployable() *runtime.Deployable {
	if x != nil {
		return x.Deployable
	}
	return nil
}

func (x *OpEnsureDeployment) GetSerializedResource() string {
	if x != nil {
		return x.SerializedResource
	}
	return ""
}

func (x *OpEnsureDeployment) GetSetNamespace() bool {
	if x != nil {
		return x.SetNamespace
	}
	return false
}

func (x *OpEnsureDeployment) GetInhibitEvents() bool {
	if x != nil {
		return x.InhibitEvents
	}
	return false
}

func (x *OpEnsureDeployment) GetConfigurationVolumeName() string {
	if x != nil {
		return x.ConfigurationVolumeName
	}
	return ""
}

func (x *OpEnsureDeployment) GetSetContainerField() []*runtime.SetContainerField {
	if x != nil {
		return x.SetContainerField
	}
	return nil
}

type OpEnsureRuntimeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployable           *runtime.Deployable                       `protobuf:"bytes,1,opt,name=deployable,proto3" json:"deployable,omitempty"`
	RuntimeConfig        *runtime.RuntimeConfig                    `protobuf:"bytes,2,opt,name=runtime_config,json=runtimeConfig,proto3" json:"runtime_config,omitempty"`
	ResourceInstanceId   []string                                  `protobuf:"bytes,3,rep,name=resource_instance_id,json=resourceInstanceId,proto3" json:"resource_instance_id,omitempty"` // XXX deprecated, use dependency.
	Dependency           []*resources.ResourceDependency           `protobuf:"bytes,4,rep,name=dependency,proto3" json:"dependency,omitempty"`
	PersistConfiguration bool                                      `protobuf:"varint,5,opt,name=persist_configuration,json=persistConfiguration,proto3" json:"persist_configuration,omitempty"`
	InjectResource       []*OpEnsureRuntimeConfig_InjectedResource `protobuf:"bytes,6,rep,name=inject_resource,json=injectResource,proto3" json:"inject_resource,omitempty"`
	BuildVcs             *runtime.BuildVCS                         `protobuf:"bytes,7,opt,name=build_vcs,json=buildVcs,proto3" json:"build_vcs,omitempty"`
	SecretChecksum       []*runtime.SecretChecksum                 `protobuf:"bytes,8,rep,name=secret_checksum,json=secretChecksum,proto3" json:"secret_checksum,omitempty"`
}

func (x *OpEnsureRuntimeConfig) Reset() {
	*x = OpEnsureRuntimeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpEnsureRuntimeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpEnsureRuntimeConfig) ProtoMessage() {}

func (x *OpEnsureRuntimeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpEnsureRuntimeConfig.ProtoReflect.Descriptor instead.
func (*OpEnsureRuntimeConfig) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_op_proto_rawDescGZIP(), []int{2}
}

func (x *OpEnsureRuntimeConfig) GetDeployable() *runtime.Deployable {
	if x != nil {
		return x.Deployable
	}
	return nil
}

func (x *OpEnsureRuntimeConfig) GetRuntimeConfig() *runtime.RuntimeConfig {
	if x != nil {
		return x.RuntimeConfig
	}
	return nil
}

func (x *OpEnsureRuntimeConfig) GetResourceInstanceId() []string {
	if x != nil {
		return x.ResourceInstanceId
	}
	return nil
}

func (x *OpEnsureRuntimeConfig) GetDependency() []*resources.ResourceDependency {
	if x != nil {
		return x.Dependency
	}
	return nil
}

func (x *OpEnsureRuntimeConfig) GetPersistConfiguration() bool {
	if x != nil {
		return x.PersistConfiguration
	}
	return false
}

func (x *OpEnsureRuntimeConfig) GetInjectResource() []*OpEnsureRuntimeConfig_InjectedResource {
	if x != nil {
		return x.InjectResource
	}
	return nil
}

func (x *OpEnsureRuntimeConfig) GetBuildVcs() *runtime.BuildVCS {
	if x != nil {
		return x.BuildVcs
	}
	return nil
}

func (x *OpEnsureRuntimeConfig) GetSecretChecksum() []*runtime.SecretChecksum {
	if x != nil {
		return x.SecretChecksum
	}
	return nil
}

type EnsureRuntimeConfigOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId               string `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	SerializedRuntimeJson  string `protobuf:"bytes,2,opt,name=serialized_runtime_json,json=serializedRuntimeJson,proto3" json:"serialized_runtime_json,omitempty"`
	SerializedResourceJson string `protobuf:"bytes,3,opt,name=serialized_resource_json,json=serializedResourceJson,proto3" json:"serialized_resource_json,omitempty"`
}

func (x *EnsureRuntimeConfigOutput) Reset() {
	*x = EnsureRuntimeConfigOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnsureRuntimeConfigOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnsureRuntimeConfigOutput) ProtoMessage() {}

func (x *EnsureRuntimeConfigOutput) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnsureRuntimeConfigOutput.ProtoReflect.Descriptor instead.
func (*EnsureRuntimeConfigOutput) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_op_proto_rawDescGZIP(), []int{3}
}

func (x *EnsureRuntimeConfigOutput) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *EnsureRuntimeConfigOutput) GetSerializedRuntimeJson() string {
	if x != nil {
		return x.SerializedRuntimeJson
	}
	return ""
}

func (x *EnsureRuntimeConfigOutput) GetSerializedResourceJson() string {
	if x != nil {
		return x.SerializedResourceJson
	}
	return ""
}

type OpDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource     string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Namespace    string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	SetNamespace bool   `protobuf:"varint,5,opt,name=set_namespace,json=setNamespace,proto3" json:"set_namespace,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *OpDelete) Reset() {
	*x = OpDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpDelete) ProtoMessage() {}

func (x *OpDelete) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpDelete.ProtoReflect.Descriptor instead.
func (*OpDelete) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_op_proto_rawDescGZIP(), []int{4}
}

func (x *OpDelete) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *OpDelete) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *OpDelete) GetSetNamespace() bool {
	if x != nil {
		return x.SetNamespace
	}
	return false
}

func (x *OpDelete) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type OpDeleteList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource      string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Namespace     string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	SetNamespace  bool   `protobuf:"varint,5,opt,name=set_namespace,json=setNamespace,proto3" json:"set_namespace,omitempty"`
	LabelSelector string `protobuf:"bytes,3,opt,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty"`
}

func (x *OpDeleteList) Reset() {
	*x = OpDeleteList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpDeleteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpDeleteList) ProtoMessage() {}

func (x *OpDeleteList) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpDeleteList.ProtoReflect.Descriptor instead.
func (*OpDeleteList) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_op_proto_rawDescGZIP(), []int{5}
}

func (x *OpDeleteList) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *OpDeleteList) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *OpDeleteList) GetSetNamespace() bool {
	if x != nil {
		return x.SetNamespace
	}
	return false
}

func (x *OpDeleteList) GetLabelSelector() string {
	if x != nil {
		return x.LabelSelector
	}
	return ""
}

type OpCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource            string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"` // XXX deprecated.
	SetNamespace        bool   `protobuf:"varint,8,opt,name=set_namespace,json=setNamespace,proto3" json:"set_namespace,omitempty"`
	SkipIfAlreadyExists bool   `protobuf:"varint,2,opt,name=skip_if_already_exists,json=skipIfAlreadyExists,proto3" json:"skip_if_already_exists,omitempty"`
	UpdateIfExisting    bool   `protobuf:"varint,6,opt,name=update_if_existing,json=updateIfExisting,proto3" json:"update_if_existing,omitempty"`
	BodyJson            string `protobuf:"bytes,5,opt,name=body_json,json=bodyJson,proto3" json:"body_json,omitempty"`
}

func (x *OpCreate) Reset() {
	*x = OpCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpCreate) ProtoMessage() {}

func (x *OpCreate) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpCreate.ProtoReflect.Descriptor instead.
func (*OpCreate) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_op_proto_rawDescGZIP(), []int{6}
}

func (x *OpCreate) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *OpCreate) GetSetNamespace() bool {
	if x != nil {
		return x.SetNamespace
	}
	return false
}

func (x *OpCreate) GetSkipIfAlreadyExists() bool {
	if x != nil {
		return x.SkipIfAlreadyExists
	}
	return false
}

func (x *OpCreate) GetUpdateIfExisting() bool {
	if x != nil {
		return x.UpdateIfExisting
	}
	return false
}

func (x *OpCreate) GetBodyJson() string {
	if x != nil {
		return x.BodyJson
	}
	return ""
}

// This is a temporary type; usage should be limited. It's a workaround until we
// can compose invocations, so secrets can wrap a "create secret payload"
// invocation around the user-provided invocation. The value is passed
// along-side the SerializedInvocation, with key "value".
type OpCreateSecretConditionally struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace             string                    `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	SetNamespace          bool                      `protobuf:"varint,6,opt,name=set_namespace,json=setNamespace,proto3" json:"set_namespace,omitempty"`
	Name                  string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	UserSpecifiedName     string                    `protobuf:"bytes,3,opt,name=user_specified_name,json=userSpecifiedName,proto3" json:"user_specified_name,omitempty"`
	SelfSignedCertificate *types.TLSCertificateSpec `protobuf:"bytes,4,opt,name=self_signed_certificate,json=selfSignedCertificate,proto3" json:"self_signed_certificate,omitempty"`
}

func (x *OpCreateSecretConditionally) Reset() {
	*x = OpCreateSecretConditionally{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpCreateSecretConditionally) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpCreateSecretConditionally) ProtoMessage() {}

func (x *OpCreateSecretConditionally) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpCreateSecretConditionally.ProtoReflect.Descriptor instead.
func (*OpCreateSecretConditionally) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_op_proto_rawDescGZIP(), []int{7}
}

func (x *OpCreateSecretConditionally) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *OpCreateSecretConditionally) GetSetNamespace() bool {
	if x != nil {
		return x.SetNamespace
	}
	return false
}

func (x *OpCreateSecretConditionally) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OpCreateSecretConditionally) GetUserSpecifiedName() string {
	if x != nil {
		return x.UserSpecifiedName
	}
	return ""
}

func (x *OpCreateSecretConditionally) GetSelfSignedCertificate() *types.TLSCertificateSpec {
	if x != nil {
		return x.SelfSignedCertificate
	}
	return nil
}

type OpCleanupRuntimeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CheckPods bool   `protobuf:"varint,2,opt,name=check_pods,json=checkPods,proto3" json:"check_pods,omitempty"` // Set in tests.
}

func (x *OpCleanupRuntimeConfig) Reset() {
	*x = OpCleanupRuntimeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpCleanupRuntimeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpCleanupRuntimeConfig) ProtoMessage() {}

func (x *OpCleanupRuntimeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpCleanupRuntimeConfig.ProtoReflect.Descriptor instead.
func (*OpCleanupRuntimeConfig) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_op_proto_rawDescGZIP(), []int{8}
}

func (x *OpCleanupRuntimeConfig) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *OpCleanupRuntimeConfig) GetCheckPods() bool {
	if x != nil {
		return x.CheckPods
	}
	return false
}

type OpApplyRoleBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespaced      bool                           `protobuf:"varint,1,opt,name=namespaced,proto3" json:"namespaced,omitempty"`
	RoleName        string                         `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	RoleBindingName string                         `protobuf:"bytes,3,opt,name=role_binding_name,json=roleBindingName,proto3" json:"role_binding_name,omitempty"`
	Label           []*OpApplyRoleBinding_KeyValue `protobuf:"bytes,4,rep,name=label,proto3" json:"label,omitempty"`
	Annotation      []*OpApplyRoleBinding_KeyValue `protobuf:"bytes,5,rep,name=annotation,proto3" json:"annotation,omitempty"`
	RulesJson       string                         `protobuf:"bytes,6,opt,name=rules_json,json=rulesJson,proto3" json:"rules_json,omitempty"`
	ServiceAccount  string                         `protobuf:"bytes,7,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
}

func (x *OpApplyRoleBinding) Reset() {
	*x = OpApplyRoleBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpApplyRoleBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpApplyRoleBinding) ProtoMessage() {}

func (x *OpApplyRoleBinding) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpApplyRoleBinding.ProtoReflect.Descriptor instead.
func (*OpApplyRoleBinding) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_op_proto_rawDescGZIP(), []int{9}
}

func (x *OpApplyRoleBinding) GetNamespaced() bool {
	if x != nil {
		return x.Namespaced
	}
	return false
}

func (x *OpApplyRoleBinding) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *OpApplyRoleBinding) GetRoleBindingName() string {
	if x != nil {
		return x.RoleBindingName
	}
	return ""
}

func (x *OpApplyRoleBinding) GetLabel() []*OpApplyRoleBinding_KeyValue {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *OpApplyRoleBinding) GetAnnotation() []*OpApplyRoleBinding_KeyValue {
	if x != nil {
		return x.Annotation
	}
	return nil
}

func (x *OpApplyRoleBinding) GetRulesJson() string {
	if x != nil {
		return x.RulesJson
	}
	return ""
}

func (x *OpApplyRoleBinding) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

type OpApply_CheckGenerationCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *OpApply_CheckGenerationCondition) Reset() {
	*x = OpApply_CheckGenerationCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpApply_CheckGenerationCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpApply_CheckGenerationCondition) ProtoMessage() {}

func (x *OpApply_CheckGenerationCondition) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpApply_CheckGenerationCondition.ProtoReflect.Descriptor instead.
func (*OpApply_CheckGenerationCondition) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_op_proto_rawDescGZIP(), []int{0, 0}
}

func (x *OpApply_CheckGenerationCondition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type OpEnsureRuntimeConfig_InjectedResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceRef    *schema.PackageRef `protobuf:"bytes,1,opt,name=resource_ref,json=resourceRef,proto3" json:"resource_ref,omitempty"`
	SerializedJson []byte             `protobuf:"bytes,2,opt,name=serialized_json,json=serializedJson,proto3" json:"serialized_json,omitempty"`
}

func (x *OpEnsureRuntimeConfig_InjectedResource) Reset() {
	*x = OpEnsureRuntimeConfig_InjectedResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpEnsureRuntimeConfig_InjectedResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpEnsureRuntimeConfig_InjectedResource) ProtoMessage() {}

func (x *OpEnsureRuntimeConfig_InjectedResource) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpEnsureRuntimeConfig_InjectedResource.ProtoReflect.Descriptor instead.
func (*OpEnsureRuntimeConfig_InjectedResource) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_op_proto_rawDescGZIP(), []int{2, 0}
}

func (x *OpEnsureRuntimeConfig_InjectedResource) GetResourceRef() *schema.PackageRef {
	if x != nil {
		return x.ResourceRef
	}
	return nil
}

func (x *OpEnsureRuntimeConfig_InjectedResource) GetSerializedJson() []byte {
	if x != nil {
		return x.SerializedJson
	}
	return nil
}

type OpApplyRoleBinding_KeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *OpApplyRoleBinding_KeyValue) Reset() {
	*x = OpApplyRoleBinding_KeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpApplyRoleBinding_KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpApplyRoleBinding_KeyValue) ProtoMessage() {}

func (x *OpApplyRoleBinding_KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_op_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpApplyRoleBinding_KeyValue.ProtoReflect.Descriptor instead.
func (*OpApplyRoleBinding_KeyValue) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_op_proto_rawDescGZIP(), []int{9, 0}
}

func (x *OpApplyRoleBinding_KeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *OpApplyRoleBinding_KeyValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_framework_kubernetes_kubedef_op_proto protoreflect.FileDescriptor

var file_framework_kubernetes_kubedef_op_proto_rawDesc = []byte{
	0x0a, 0x25, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x64, 0x65, 0x66, 0x2f, 0x6f,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x25, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x6b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x64, 0x65, 0x66, 0x1a, 0x1a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16,
	0x73, 0x74, 0x64, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6f, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x73, 0x74, 0x64, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x03, 0x0a, 0x07, 0x4f, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x64, 0x79, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x68, 0x69, 0x62, 0x69, 0x74, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x68, 0x69,
	0x62, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x37, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x85, 0x01, 0x0a, 0x1a, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47,
	0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6b,
	0x75, 0x62, 0x65, 0x64, 0x65, 0x66, 0x2e, 0x4f, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x18, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x2e, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08,
	0x02, 0x10, 0x03, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22,
	0xf2, 0x02, 0x0a, 0x12, 0x4f, 0x70, 0x45, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2f, 0x0a,
	0x13, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x68, 0x69, 0x62, 0x69, 0x74, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x68,
	0x69, 0x62, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5c, 0x0a, 0x13, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x52, 0x11, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x22, 0xf1, 0x05, 0x0a, 0x15, 0x4f, 0x70, 0x45, 0x6e, 0x73, 0x75, 0x72,
	0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x45,
	0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x33, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a, 0x0f, 0x69,
	0x6e, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x65, 0x73, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x64, 0x65, 0x66, 0x2e, 0x4f, 0x70, 0x45,
	0x6e, 0x73, 0x75, 0x72, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x0e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76, 0x63, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x43, 0x53, 0x52, 0x08, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x56, 0x63, 0x73, 0x12, 0x52, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x1a, 0x7d, 0x0a, 0x10, 0x49, 0x6e, 0x6a,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x40, 0x0a,
	0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x66, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x6a, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0xaa, 0x01, 0x0a, 0x19, 0x45, 0x6e, 0x73,
	0x75, 0x72, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x18, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x08, 0x4f, 0x70, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0x9a, 0x01, 0x0a, 0x0c,
	0x4f, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0xdd, 0x01, 0x0a, 0x08, 0x4f, 0x70, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x69,
	0x66, 0x5f, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x73, 0x6b, 0x69, 0x70, 0x49, 0x66, 0x41, 0x6c,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x66, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x66, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x64,
	0x79, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f,
	0x64, 0x79, 0x4a, 0x73, 0x6f, 0x6e, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x4a, 0x04, 0x08, 0x03,
	0x10, 0x04, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0x8c, 0x02, 0x0a, 0x1b, 0x4f, 0x70, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x73,
	0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x60, 0x0a, 0x17, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x74,
	0x64, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x15, 0x73, 0x65, 0x6c, 0x66,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0x55, 0x0a, 0x16, 0x4f, 0x70, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x75, 0x70, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x6f, 0x64, 0x73, 0x22, 0xb7,
	0x03, 0x0a, 0x12, 0x4f, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x58,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x64, 0x65, 0x66, 0x2e, 0x4f, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x62, 0x0a, 0x0a, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x64, 0x65, 0x66, 0x2e, 0x4f, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x6f, 0x6c, 0x65,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x32, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x3b, 0x5a, 0x39, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2f, 0x6b, 0x75,
	0x62, 0x65, 0x64, 0x65, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_framework_kubernetes_kubedef_op_proto_rawDescOnce sync.Once
	file_framework_kubernetes_kubedef_op_proto_rawDescData = file_framework_kubernetes_kubedef_op_proto_rawDesc
)

func file_framework_kubernetes_kubedef_op_proto_rawDescGZIP() []byte {
	file_framework_kubernetes_kubedef_op_proto_rawDescOnce.Do(func() {
		file_framework_kubernetes_kubedef_op_proto_rawDescData = protoimpl.X.CompressGZIP(file_framework_kubernetes_kubedef_op_proto_rawDescData)
	})
	return file_framework_kubernetes_kubedef_op_proto_rawDescData
}

var file_framework_kubernetes_kubedef_op_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_framework_kubernetes_kubedef_op_proto_goTypes = []interface{}{
	(*OpApply)(nil),                                // 0: foundation.runtime.kubernetes.kubedef.OpApply
	(*OpEnsureDeployment)(nil),                     // 1: foundation.runtime.kubernetes.kubedef.OpEnsureDeployment
	(*OpEnsureRuntimeConfig)(nil),                  // 2: foundation.runtime.kubernetes.kubedef.OpEnsureRuntimeConfig
	(*EnsureRuntimeConfigOutput)(nil),              // 3: foundation.runtime.kubernetes.kubedef.EnsureRuntimeConfigOutput
	(*OpDelete)(nil),                               // 4: foundation.runtime.kubernetes.kubedef.OpDelete
	(*OpDeleteList)(nil),                           // 5: foundation.runtime.kubernetes.kubedef.OpDeleteList
	(*OpCreate)(nil),                               // 6: foundation.runtime.kubernetes.kubedef.OpCreate
	(*OpCreateSecretConditionally)(nil),            // 7: foundation.runtime.kubernetes.kubedef.OpCreateSecretConditionally
	(*OpCleanupRuntimeConfig)(nil),                 // 8: foundation.runtime.kubernetes.kubedef.OpCleanupRuntimeConfig
	(*OpApplyRoleBinding)(nil),                     // 9: foundation.runtime.kubernetes.kubedef.OpApplyRoleBinding
	(*OpApply_CheckGenerationCondition)(nil),       // 10: foundation.runtime.kubernetes.kubedef.OpApply.CheckGenerationCondition
	(*OpEnsureRuntimeConfig_InjectedResource)(nil), // 11: foundation.runtime.kubernetes.kubedef.OpEnsureRuntimeConfig.InjectedResource
	(*OpApplyRoleBinding_KeyValue)(nil),            // 12: foundation.runtime.kubernetes.kubedef.OpApplyRoleBinding.KeyValue
	(*runtime.Deployable)(nil),                     // 13: foundation.schema.runtime.Deployable
	(*schema.PackageRef)(nil),                      // 14: foundation.schema.PackageRef
	(*runtime.SetContainerField)(nil),              // 15: foundation.schema.runtime.SetContainerField
	(*runtime.RuntimeConfig)(nil),                  // 16: foundation.schema.runtime.RuntimeConfig
	(*resources.ResourceDependency)(nil),           // 17: foundation.std.resources.ResourceDependency
	(*runtime.BuildVCS)(nil),                       // 18: foundation.schema.runtime.BuildVCS
	(*runtime.SecretChecksum)(nil),                 // 19: foundation.schema.runtime.SecretChecksum
	(*types.TLSCertificateSpec)(nil),               // 20: foundation.std.types.TLSCertificateSpec
}
var file_framework_kubernetes_kubedef_op_proto_depIdxs = []int32{
	13, // 0: foundation.runtime.kubernetes.kubedef.OpApply.deployable:type_name -> foundation.schema.runtime.Deployable
	14, // 1: foundation.runtime.kubernetes.kubedef.OpApply.creator:type_name -> foundation.schema.PackageRef
	10, // 2: foundation.runtime.kubernetes.kubedef.OpApply.check_generation_condition:type_name -> foundation.runtime.kubernetes.kubedef.OpApply.CheckGenerationCondition
	13, // 3: foundation.runtime.kubernetes.kubedef.OpEnsureDeployment.deployable:type_name -> foundation.schema.runtime.Deployable
	15, // 4: foundation.runtime.kubernetes.kubedef.OpEnsureDeployment.set_container_field:type_name -> foundation.schema.runtime.SetContainerField
	13, // 5: foundation.runtime.kubernetes.kubedef.OpEnsureRuntimeConfig.deployable:type_name -> foundation.schema.runtime.Deployable
	16, // 6: foundation.runtime.kubernetes.kubedef.OpEnsureRuntimeConfig.runtime_config:type_name -> foundation.schema.runtime.RuntimeConfig
	17, // 7: foundation.runtime.kubernetes.kubedef.OpEnsureRuntimeConfig.dependency:type_name -> foundation.std.resources.ResourceDependency
	11, // 8: foundation.runtime.kubernetes.kubedef.OpEnsureRuntimeConfig.inject_resource:type_name -> foundation.runtime.kubernetes.kubedef.OpEnsureRuntimeConfig.InjectedResource
	18, // 9: foundation.runtime.kubernetes.kubedef.OpEnsureRuntimeConfig.build_vcs:type_name -> foundation.schema.runtime.BuildVCS
	19, // 10: foundation.runtime.kubernetes.kubedef.OpEnsureRuntimeConfig.secret_checksum:type_name -> foundation.schema.runtime.SecretChecksum
	20, // 11: foundation.runtime.kubernetes.kubedef.OpCreateSecretConditionally.self_signed_certificate:type_name -> foundation.std.types.TLSCertificateSpec
	12, // 12: foundation.runtime.kubernetes.kubedef.OpApplyRoleBinding.label:type_name -> foundation.runtime.kubernetes.kubedef.OpApplyRoleBinding.KeyValue
	12, // 13: foundation.runtime.kubernetes.kubedef.OpApplyRoleBinding.annotation:type_name -> foundation.runtime.kubernetes.kubedef.OpApplyRoleBinding.KeyValue
	14, // 14: foundation.runtime.kubernetes.kubedef.OpEnsureRuntimeConfig.InjectedResource.resource_ref:type_name -> foundation.schema.PackageRef
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_framework_kubernetes_kubedef_op_proto_init() }
func file_framework_kubernetes_kubedef_op_proto_init() {
	if File_framework_kubernetes_kubedef_op_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_framework_kubernetes_kubedef_op_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_op_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpEnsureDeployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_op_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpEnsureRuntimeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_op_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnsureRuntimeConfigOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_op_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_op_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpDeleteList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_op_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_op_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpCreateSecretConditionally); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_op_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpCleanupRuntimeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_op_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpApplyRoleBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_op_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpApply_CheckGenerationCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_op_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpEnsureRuntimeConfig_InjectedResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_op_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpApplyRoleBinding_KeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_framework_kubernetes_kubedef_op_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_framework_kubernetes_kubedef_op_proto_goTypes,
		DependencyIndexes: file_framework_kubernetes_kubedef_op_proto_depIdxs,
		MessageInfos:      file_framework_kubernetes_kubedef_op_proto_msgTypes,
	}.Build()
	File_framework_kubernetes_kubedef_op_proto = out.File
	file_framework_kubernetes_kubedef_op_proto_rawDesc = nil
	file_framework_kubernetes_kubedef_op_proto_goTypes = nil
	file_framework_kubernetes_kubedef_op_proto_depIdxs = nil
}
