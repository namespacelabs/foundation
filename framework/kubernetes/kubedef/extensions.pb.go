// Copyright 2022 Namespace Labs Inc; All rights reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: framework/kubernetes/kubedef/extensions.proto

package kubedef

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	schema "namespacelabs.dev/foundation/schema"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SpecExtension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// XXX ideally we'd use Kubernetes protos here.
	ServiceAccount string                      `protobuf:"bytes,3,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	Volume         []*SpecExtension_Volume     `protobuf:"bytes,1,rep,name=volume,proto3" json:"volume,omitempty"`
	Annotation     []*SpecExtension_Annotation `protobuf:"bytes,2,rep,name=annotation,proto3" json:"annotation,omitempty"`
	// If true, creates a service account. If `service_account` is specified, use that name, else generate one from the server's name.
	EnsureServiceAccount     bool                           `protobuf:"varint,4,opt,name=ensure_service_account,json=ensureServiceAccount,proto3" json:"ensure_service_account,omitempty"`
	ServiceAccountAnnotation []*SpecExtension_Annotation    `protobuf:"bytes,5,rep,name=service_account_annotation,json=serviceAccountAnnotation,proto3" json:"service_account_annotation,omitempty"`
	SecurityContext          *SpecExtension_SecurityContext `protobuf:"bytes,6,opt,name=security_context,json=securityContext,proto3" json:"security_context,omitempty"`
}

func (x *SpecExtension) Reset() {
	*x = SpecExtension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecExtension) ProtoMessage() {}

func (x *SpecExtension) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecExtension.ProtoReflect.Descriptor instead.
func (*SpecExtension) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_extensions_proto_rawDescGZIP(), []int{0}
}

func (x *SpecExtension) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

func (x *SpecExtension) GetVolume() []*SpecExtension_Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

func (x *SpecExtension) GetAnnotation() []*SpecExtension_Annotation {
	if x != nil {
		return x.Annotation
	}
	return nil
}

func (x *SpecExtension) GetEnsureServiceAccount() bool {
	if x != nil {
		return x.EnsureServiceAccount
	}
	return false
}

func (x *SpecExtension) GetServiceAccountAnnotation() []*SpecExtension_Annotation {
	if x != nil {
		return x.ServiceAccountAnnotation
	}
	return nil
}

func (x *SpecExtension) GetSecurityContext() *SpecExtension_SecurityContext {
	if x != nil {
		return x.SecurityContext
	}
	return nil
}

// Next ID: 8
type ContainerExtension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeMount []*ContainerExtension_VolumeMount `protobuf:"bytes,1,rep,name=volume_mount,json=volumeMount,proto3" json:"volume_mount,omitempty"`
	Env         []*schema.BinaryConfig_EnvEntry   `protobuf:"bytes,2,rep,name=env,proto3" json:"env,omitempty"`
	Args        []string                          `protobuf:"bytes,5,rep,name=args,proto3" json:"args,omitempty"`
	// Deprecated, use `args`.
	ArgTuple []*ContainerExtension_ArgTuple `protobuf:"bytes,4,rep,name=arg_tuple,json=argTuple,proto3" json:"arg_tuple,omitempty"`
	// Deprecated, use `InitContainerExtension`.
	InitContainer []*ContainerExtension_InitContainer `protobuf:"bytes,3,rep,name=init_container,json=initContainer,proto3" json:"init_container,omitempty"`
	Probe         []*schema.Probe                     `protobuf:"bytes,7,rep,name=probe,proto3" json:"probe,omitempty"`
}

func (x *ContainerExtension) Reset() {
	*x = ContainerExtension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerExtension) ProtoMessage() {}

func (x *ContainerExtension) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerExtension.ProtoReflect.Descriptor instead.
func (*ContainerExtension) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_extensions_proto_rawDescGZIP(), []int{1}
}

func (x *ContainerExtension) GetVolumeMount() []*ContainerExtension_VolumeMount {
	if x != nil {
		return x.VolumeMount
	}
	return nil
}

func (x *ContainerExtension) GetEnv() []*schema.BinaryConfig_EnvEntry {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *ContainerExtension) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ContainerExtension) GetArgTuple() []*ContainerExtension_ArgTuple {
	if x != nil {
		return x.ArgTuple
	}
	return nil
}

func (x *ContainerExtension) GetInitContainer() []*ContainerExtension_InitContainer {
	if x != nil {
		return x.InitContainer
	}
	return nil
}

func (x *ContainerExtension) GetProbe() []*schema.Probe {
	if x != nil {
		return x.Probe
	}
	return nil
}

type InitContainerExtension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated, use package_ref.
	PackageName string             `protobuf:"bytes,1,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	PackageRef  *schema.PackageRef `protobuf:"bytes,3,opt,name=package_ref,json=packageRef,proto3" json:"package_ref,omitempty"`
	Args        []string           `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *InitContainerExtension) Reset() {
	*x = InitContainerExtension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitContainerExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitContainerExtension) ProtoMessage() {}

func (x *InitContainerExtension) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitContainerExtension.ProtoReflect.Descriptor instead.
func (*InitContainerExtension) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_extensions_proto_rawDescGZIP(), []int{2}
}

func (x *InitContainerExtension) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *InitContainerExtension) GetPackageRef() *schema.PackageRef {
	if x != nil {
		return x.PackageRef
	}
	return nil
}

func (x *InitContainerExtension) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type SpecExtension_Volume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to VolumeType:
	//	*SpecExtension_Volume_Secret_
	//	*SpecExtension_Volume_ConfigMap_
	VolumeType isSpecExtension_Volume_VolumeType `protobuf_oneof:"volume_type"`
}

func (x *SpecExtension_Volume) Reset() {
	*x = SpecExtension_Volume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecExtension_Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecExtension_Volume) ProtoMessage() {}

func (x *SpecExtension_Volume) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecExtension_Volume.ProtoReflect.Descriptor instead.
func (*SpecExtension_Volume) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_extensions_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SpecExtension_Volume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *SpecExtension_Volume) GetVolumeType() isSpecExtension_Volume_VolumeType {
	if m != nil {
		return m.VolumeType
	}
	return nil
}

func (x *SpecExtension_Volume) GetSecret() *SpecExtension_Volume_Secret {
	if x, ok := x.GetVolumeType().(*SpecExtension_Volume_Secret_); ok {
		return x.Secret
	}
	return nil
}

func (x *SpecExtension_Volume) GetConfigMap() *SpecExtension_Volume_ConfigMap {
	if x, ok := x.GetVolumeType().(*SpecExtension_Volume_ConfigMap_); ok {
		return x.ConfigMap
	}
	return nil
}

type isSpecExtension_Volume_VolumeType interface {
	isSpecExtension_Volume_VolumeType()
}

type SpecExtension_Volume_Secret_ struct {
	Secret *SpecExtension_Volume_Secret `protobuf:"bytes,2,opt,name=secret,proto3,oneof"`
}

type SpecExtension_Volume_ConfigMap_ struct {
	ConfigMap *SpecExtension_Volume_ConfigMap `protobuf:"bytes,3,opt,name=config_map,json=configMap,proto3,oneof"`
}

func (*SpecExtension_Volume_Secret_) isSpecExtension_Volume_VolumeType() {}

func (*SpecExtension_Volume_ConfigMap_) isSpecExtension_Volume_VolumeType() {}

type SpecExtension_Annotation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SpecExtension_Annotation) Reset() {
	*x = SpecExtension_Annotation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecExtension_Annotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecExtension_Annotation) ProtoMessage() {}

func (x *SpecExtension_Annotation) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecExtension_Annotation.ProtoReflect.Descriptor instead.
func (*SpecExtension_Annotation) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_extensions_proto_rawDescGZIP(), []int{0, 1}
}

func (x *SpecExtension_Annotation) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SpecExtension_Annotation) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SpecExtension_SecurityContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunAsUser  int64 `protobuf:"varint,1,opt,name=run_as_user,json=runAsUser,proto3" json:"run_as_user,omitempty"`
	RunAsGroup int64 `protobuf:"varint,2,opt,name=run_as_group,json=runAsGroup,proto3" json:"run_as_group,omitempty"`
	FsGroup    int64 `protobuf:"varint,3,opt,name=fs_group,json=fsGroup,proto3" json:"fs_group,omitempty"`
}

func (x *SpecExtension_SecurityContext) Reset() {
	*x = SpecExtension_SecurityContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecExtension_SecurityContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecExtension_SecurityContext) ProtoMessage() {}

func (x *SpecExtension_SecurityContext) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecExtension_SecurityContext.ProtoReflect.Descriptor instead.
func (*SpecExtension_SecurityContext) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_extensions_proto_rawDescGZIP(), []int{0, 2}
}

func (x *SpecExtension_SecurityContext) GetRunAsUser() int64 {
	if x != nil {
		return x.RunAsUser
	}
	return 0
}

func (x *SpecExtension_SecurityContext) GetRunAsGroup() int64 {
	if x != nil {
		return x.RunAsGroup
	}
	return 0
}

func (x *SpecExtension_SecurityContext) GetFsGroup() int64 {
	if x != nil {
		return x.FsGroup
	}
	return 0
}

type SpecExtension_Volume_Secret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretName string `protobuf:"bytes,1,opt,name=secret_name,json=secretName,proto3" json:"secret_name,omitempty"`
}

func (x *SpecExtension_Volume_Secret) Reset() {
	*x = SpecExtension_Volume_Secret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecExtension_Volume_Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecExtension_Volume_Secret) ProtoMessage() {}

func (x *SpecExtension_Volume_Secret) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecExtension_Volume_Secret.ProtoReflect.Descriptor instead.
func (*SpecExtension_Volume_Secret) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_extensions_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *SpecExtension_Volume_Secret) GetSecretName() string {
	if x != nil {
		return x.SecretName
	}
	return ""
}

type SpecExtension_Volume_ConfigMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ConfigMapName string                                 `protobuf:"bytes,2,opt,name=config_map_name,json=configMapName,proto3" json:"config_map_name,omitempty"`
	Item          []*SpecExtension_Volume_ConfigMap_Item `protobuf:"bytes,3,rep,name=item,proto3" json:"item,omitempty"`
}

func (x *SpecExtension_Volume_ConfigMap) Reset() {
	*x = SpecExtension_Volume_ConfigMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecExtension_Volume_ConfigMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecExtension_Volume_ConfigMap) ProtoMessage() {}

func (x *SpecExtension_Volume_ConfigMap) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecExtension_Volume_ConfigMap.ProtoReflect.Descriptor instead.
func (*SpecExtension_Volume_ConfigMap) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_extensions_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *SpecExtension_Volume_ConfigMap) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpecExtension_Volume_ConfigMap) GetConfigMapName() string {
	if x != nil {
		return x.ConfigMapName
	}
	return ""
}

func (x *SpecExtension_Volume_ConfigMap) GetItem() []*SpecExtension_Volume_ConfigMap_Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type SpecExtension_Volume_ConfigMap_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *SpecExtension_Volume_ConfigMap_Item) Reset() {
	*x = SpecExtension_Volume_ConfigMap_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecExtension_Volume_ConfigMap_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecExtension_Volume_ConfigMap_Item) ProtoMessage() {}

func (x *SpecExtension_Volume_ConfigMap_Item) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecExtension_Volume_ConfigMap_Item.ProtoReflect.Descriptor instead.
func (*SpecExtension_Volume_ConfigMap_Item) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_extensions_proto_rawDescGZIP(), []int{0, 0, 1, 0}
}

func (x *SpecExtension_Volume_ConfigMap_Item) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SpecExtension_Volume_ConfigMap_Item) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ContainerExtension_VolumeMount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ReadOnly    bool   `protobuf:"varint,2,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	MountPath   string `protobuf:"bytes,3,opt,name=mount_path,json=mountPath,proto3" json:"mount_path,omitempty"`
	MountOnInit bool   `protobuf:"varint,4,opt,name=mount_on_init,json=mountOnInit,proto3" json:"mount_on_init,omitempty"` // Whether to mount this volume also for init containers.
}

func (x *ContainerExtension_VolumeMount) Reset() {
	*x = ContainerExtension_VolumeMount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerExtension_VolumeMount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerExtension_VolumeMount) ProtoMessage() {}

func (x *ContainerExtension_VolumeMount) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerExtension_VolumeMount.ProtoReflect.Descriptor instead.
func (*ContainerExtension_VolumeMount) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_extensions_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ContainerExtension_VolumeMount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerExtension_VolumeMount) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *ContainerExtension_VolumeMount) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

func (x *ContainerExtension_VolumeMount) GetMountOnInit() bool {
	if x != nil {
		return x.MountOnInit
	}
	return false
}

type ContainerExtension_Env struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ContainerExtension_Env) Reset() {
	*x = ContainerExtension_Env{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerExtension_Env) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerExtension_Env) ProtoMessage() {}

func (x *ContainerExtension_Env) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerExtension_Env.ProtoReflect.Descriptor instead.
func (*ContainerExtension_Env) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_extensions_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ContainerExtension_Env) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerExtension_Env) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ContainerExtension_ArgTuple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ContainerExtension_ArgTuple) Reset() {
	*x = ContainerExtension_ArgTuple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerExtension_ArgTuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerExtension_ArgTuple) ProtoMessage() {}

func (x *ContainerExtension_ArgTuple) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerExtension_ArgTuple.ProtoReflect.Descriptor instead.
func (*ContainerExtension_ArgTuple) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_extensions_proto_rawDescGZIP(), []int{1, 2}
}

func (x *ContainerExtension_ArgTuple) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerExtension_ArgTuple) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ContainerExtension_InitContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageName string   `protobuf:"bytes,1,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	Arg         []string `protobuf:"bytes,2,rep,name=arg,proto3" json:"arg,omitempty"`
}

func (x *ContainerExtension_InitContainer) Reset() {
	*x = ContainerExtension_InitContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerExtension_InitContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerExtension_InitContainer) ProtoMessage() {}

func (x *ContainerExtension_InitContainer) ProtoReflect() protoreflect.Message {
	mi := &file_framework_kubernetes_kubedef_extensions_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerExtension_InitContainer.ProtoReflect.Descriptor instead.
func (*ContainerExtension_InitContainer) Descriptor() ([]byte, []int) {
	return file_framework_kubernetes_kubedef_extensions_proto_rawDescGZIP(), []int{1, 3}
}

func (x *ContainerExtension_InitContainer) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *ContainerExtension_InitContainer) GetArg() []string {
	if x != nil {
		return x.Arg
	}
	return nil
}

var File_framework_kubernetes_kubedef_extensions_proto protoreflect.FileDescriptor

var file_framework_kubernetes_kubedef_extensions_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x64, 0x65, 0x66, 0x2f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x25, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6b,
	0x75, 0x62, 0x65, 0x64, 0x65, 0x66, 0x1a, 0x13, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x12, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x09, 0x0a, 0x0d, 0x53, 0x70, 0x65, 0x63, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x53, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x64, 0x65, 0x66, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x6b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x64, 0x65,
	0x66, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x6e, 0x73, 0x75, 0x72, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x65, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x7d, 0x0a, 0x1a,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3f, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x64, 0x65, 0x66, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x18, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x10, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x64, 0x65, 0x66, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x1a, 0xf4, 0x03, 0x0a,
	0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5c, 0x0a, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6b, 0x75, 0x62, 0x65,
	0x64, 0x65, 0x66, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x48,
	0x00, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x66, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x64, 0x65, 0x66, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4d, 0x61, 0x70, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61,
	0x70, 0x1a, 0x29, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xd5, 0x01, 0x0a,
	0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d,
	0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5e, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x65, 0x73, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x64, 0x65, 0x66, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x1a, 0x2c, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x1a, 0x34, 0x0a, 0x0a, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x6e, 0x0a, 0x0f, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0b,
	0x72, 0x75, 0x6e, 0x5f, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x41, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0c,
	0x72, 0x75, 0x6e, 0x5f, 0x61, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x72, 0x75, 0x6e, 0x41, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19,
	0x0a, 0x08, 0x66, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x66, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x86, 0x06, 0x0a, 0x12, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x68, 0x0a, 0x0c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x6b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x64, 0x65, 0x66, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x03, 0x65, 0x6e,
	0x76, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x42, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x5f, 0x0a, 0x09, 0x61, 0x72,
	0x67, 0x5f, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x64, 0x65, 0x66, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x72, 0x67, 0x54, 0x75, 0x70, 0x6c,
	0x65, 0x52, 0x08, 0x61, 0x72, 0x67, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x6e, 0x0a, 0x0e, 0x69,
	0x6e, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x64, 0x65, 0x66, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x49,
	0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0d, 0x69, 0x6e,
	0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x05, 0x70,
	0x72, 0x6f, 0x62, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x50,
	0x72, 0x6f, 0x62, 0x65, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x1a, 0x81, 0x01, 0x0a, 0x0b,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0d, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x1a,
	0x2f, 0x0a, 0x03, 0x45, 0x6e, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x34, 0x0a, 0x08, 0x41, 0x72, 0x67, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x44, 0x0a, 0x0d, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x72,
	0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x61, 0x72, 0x67, 0x4a, 0x04, 0x08, 0x06,
	0x10, 0x07, 0x22, 0x8f, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x3e, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x72, 0x67, 0x73, 0x42, 0x3b, 0x5a, 0x39, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x64, 0x65,
	0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_framework_kubernetes_kubedef_extensions_proto_rawDescOnce sync.Once
	file_framework_kubernetes_kubedef_extensions_proto_rawDescData = file_framework_kubernetes_kubedef_extensions_proto_rawDesc
)

func file_framework_kubernetes_kubedef_extensions_proto_rawDescGZIP() []byte {
	file_framework_kubernetes_kubedef_extensions_proto_rawDescOnce.Do(func() {
		file_framework_kubernetes_kubedef_extensions_proto_rawDescData = protoimpl.X.CompressGZIP(file_framework_kubernetes_kubedef_extensions_proto_rawDescData)
	})
	return file_framework_kubernetes_kubedef_extensions_proto_rawDescData
}

var file_framework_kubernetes_kubedef_extensions_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_framework_kubernetes_kubedef_extensions_proto_goTypes = []interface{}{
	(*SpecExtension)(nil),                       // 0: foundation.runtime.kubernetes.kubedef.SpecExtension
	(*ContainerExtension)(nil),                  // 1: foundation.runtime.kubernetes.kubedef.ContainerExtension
	(*InitContainerExtension)(nil),              // 2: foundation.runtime.kubernetes.kubedef.InitContainerExtension
	(*SpecExtension_Volume)(nil),                // 3: foundation.runtime.kubernetes.kubedef.SpecExtension.Volume
	(*SpecExtension_Annotation)(nil),            // 4: foundation.runtime.kubernetes.kubedef.SpecExtension.Annotation
	(*SpecExtension_SecurityContext)(nil),       // 5: foundation.runtime.kubernetes.kubedef.SpecExtension.SecurityContext
	(*SpecExtension_Volume_Secret)(nil),         // 6: foundation.runtime.kubernetes.kubedef.SpecExtension.Volume.Secret
	(*SpecExtension_Volume_ConfigMap)(nil),      // 7: foundation.runtime.kubernetes.kubedef.SpecExtension.Volume.ConfigMap
	(*SpecExtension_Volume_ConfigMap_Item)(nil), // 8: foundation.runtime.kubernetes.kubedef.SpecExtension.Volume.ConfigMap.Item
	(*ContainerExtension_VolumeMount)(nil),      // 9: foundation.runtime.kubernetes.kubedef.ContainerExtension.VolumeMount
	(*ContainerExtension_Env)(nil),              // 10: foundation.runtime.kubernetes.kubedef.ContainerExtension.Env
	(*ContainerExtension_ArgTuple)(nil),         // 11: foundation.runtime.kubernetes.kubedef.ContainerExtension.ArgTuple
	(*ContainerExtension_InitContainer)(nil),    // 12: foundation.runtime.kubernetes.kubedef.ContainerExtension.InitContainer
	(*schema.BinaryConfig_EnvEntry)(nil),        // 13: foundation.schema.BinaryConfig.EnvEntry
	(*schema.Probe)(nil),                        // 14: foundation.schema.Probe
	(*schema.PackageRef)(nil),                   // 15: foundation.schema.PackageRef
}
var file_framework_kubernetes_kubedef_extensions_proto_depIdxs = []int32{
	3,  // 0: foundation.runtime.kubernetes.kubedef.SpecExtension.volume:type_name -> foundation.runtime.kubernetes.kubedef.SpecExtension.Volume
	4,  // 1: foundation.runtime.kubernetes.kubedef.SpecExtension.annotation:type_name -> foundation.runtime.kubernetes.kubedef.SpecExtension.Annotation
	4,  // 2: foundation.runtime.kubernetes.kubedef.SpecExtension.service_account_annotation:type_name -> foundation.runtime.kubernetes.kubedef.SpecExtension.Annotation
	5,  // 3: foundation.runtime.kubernetes.kubedef.SpecExtension.security_context:type_name -> foundation.runtime.kubernetes.kubedef.SpecExtension.SecurityContext
	9,  // 4: foundation.runtime.kubernetes.kubedef.ContainerExtension.volume_mount:type_name -> foundation.runtime.kubernetes.kubedef.ContainerExtension.VolumeMount
	13, // 5: foundation.runtime.kubernetes.kubedef.ContainerExtension.env:type_name -> foundation.schema.BinaryConfig.EnvEntry
	11, // 6: foundation.runtime.kubernetes.kubedef.ContainerExtension.arg_tuple:type_name -> foundation.runtime.kubernetes.kubedef.ContainerExtension.ArgTuple
	12, // 7: foundation.runtime.kubernetes.kubedef.ContainerExtension.init_container:type_name -> foundation.runtime.kubernetes.kubedef.ContainerExtension.InitContainer
	14, // 8: foundation.runtime.kubernetes.kubedef.ContainerExtension.probe:type_name -> foundation.schema.Probe
	15, // 9: foundation.runtime.kubernetes.kubedef.InitContainerExtension.package_ref:type_name -> foundation.schema.PackageRef
	6,  // 10: foundation.runtime.kubernetes.kubedef.SpecExtension.Volume.secret:type_name -> foundation.runtime.kubernetes.kubedef.SpecExtension.Volume.Secret
	7,  // 11: foundation.runtime.kubernetes.kubedef.SpecExtension.Volume.config_map:type_name -> foundation.runtime.kubernetes.kubedef.SpecExtension.Volume.ConfigMap
	8,  // 12: foundation.runtime.kubernetes.kubedef.SpecExtension.Volume.ConfigMap.item:type_name -> foundation.runtime.kubernetes.kubedef.SpecExtension.Volume.ConfigMap.Item
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_framework_kubernetes_kubedef_extensions_proto_init() }
func file_framework_kubernetes_kubedef_extensions_proto_init() {
	if File_framework_kubernetes_kubedef_extensions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_framework_kubernetes_kubedef_extensions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecExtension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_extensions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerExtension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_extensions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitContainerExtension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_extensions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecExtension_Volume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_extensions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecExtension_Annotation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_extensions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecExtension_SecurityContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_extensions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecExtension_Volume_Secret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_extensions_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecExtension_Volume_ConfigMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_extensions_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecExtension_Volume_ConfigMap_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_extensions_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerExtension_VolumeMount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_extensions_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerExtension_Env); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_extensions_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerExtension_ArgTuple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_framework_kubernetes_kubedef_extensions_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerExtension_InitContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_framework_kubernetes_kubedef_extensions_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*SpecExtension_Volume_Secret_)(nil),
		(*SpecExtension_Volume_ConfigMap_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_framework_kubernetes_kubedef_extensions_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_framework_kubernetes_kubedef_extensions_proto_goTypes,
		DependencyIndexes: file_framework_kubernetes_kubedef_extensions_proto_depIdxs,
		MessageInfos:      file_framework_kubernetes_kubedef_extensions_proto_msgTypes,
	}.Build()
	File_framework_kubernetes_kubedef_extensions_proto = out.File
	file_framework_kubernetes_kubedef_extensions_proto_rawDesc = nil
	file_framework_kubernetes_kubedef_extensions_proto_goTypes = nil
	file_framework_kubernetes_kubedef_extensions_proto_depIdxs = nil
}
