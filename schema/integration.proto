// Copyright 2022 Namespace Labs Inc; All rights reserved.
// Licensed under the EARLY ACCESS SOFTWARE LICENSE AGREEMENT
// available at http://github.com/namespacelabs/foundation

syntax = "proto3";

package foundation.schema;

option go_package = "namespacelabs.dev/foundation/schema";

import "google/protobuf/any.proto";
import "schema/package.proto";

// For whole packages.
message PackageIntegration {
    // Contains the integration-specific configuration, see below.
    google.protobuf.Any data = 1;
}

message DockerIntegration {
    string dockerfile = 1;
}

message ShellScriptIntegration {
    string entrypoint = 1;

    // Additional packages to install in the base image. By default, bash and curl are installed.
    repeated string required_packages = 2;
}

message GoIntegration {
    string pkg = 1;
}

message NodejsIntegration {
    // Path to `package.json`, relative to the Namespace package. Default is "."
    string pkg = 1;

    // Detected Node.js package manager.
    NodePkgMgr node_pkg_mgr = 2;

    // Names of the scripts from `package.json`.
    repeated string package_json_scripts = 3;

    // Relative path to copy to the output image. If set, the result image contains only these files.
    // Only affects non-dev environments.
    // TODO: Move copying the files out of the Node.js implementation.
    string build_output_dir = 4;

    // For Web builds. It is here because building the image for Web is done by the Node.js builder.
    repeated Backend backend = 5;

    enum NodePkgMgr {
        PKG_MGR_UNKNOWN = 0;
        NPM             = 1;
        YARN            = 2;
        YARN3           = 4;
        PNPM            = 3;
    }

    message Backend {
        // The name of the backend for this particular Web build, e.g. "api".
        string name = 1;

        PackageRef service = 2;
    }
}

message WebIntegration {
    NodejsIntegration nodejs = 1;

    string build_output_dir = 2;

    // The service that corresponds to this web integration.
    // Needed to get the port for prod serving.
    string service = 3;

    message Build {
        NodejsIntegration nodejs = 1;

        string build_output_dir = 2;

        // Passed to nginx
        int32 port = 3;
    }
}