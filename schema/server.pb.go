// Copyright 2022 Namespace Labs Inc; All rights reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: schema/server.proto

package schema

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Framework int32

const (
	Framework_FRAMEWORK_UNSPECIFIED Framework = 0
	Framework_GO                    Framework = 1
	// Only for servers
	Framework_OPAQUE        Framework = 4
	Framework_OPAQUE_NODEJS Framework = 5
)

// Enum value maps for Framework.
var (
	Framework_name = map[int32]string{
		0: "FRAMEWORK_UNSPECIFIED",
		1: "GO",
		4: "OPAQUE",
		5: "OPAQUE_NODEJS",
	}
	Framework_value = map[string]int32{
		"FRAMEWORK_UNSPECIFIED": 0,
		"GO":                    1,
		"OPAQUE":                4,
		"OPAQUE_NODEJS":         5,
	}
)

func (x Framework) Enum() *Framework {
	p := new(Framework)
	*p = x
	return p
}

func (x Framework) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Framework) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_server_proto_enumTypes[0].Descriptor()
}

func (Framework) Type() protoreflect.EnumType {
	return &file_schema_server_proto_enumTypes[0]
}

func (x Framework) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Framework.Descriptor instead.
func (Framework) EnumDescriptor() ([]byte, []int) {
	return file_schema_server_proto_rawDescGZIP(), []int{0}
}

// Next ID: 39
type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The package name (computed).
	PackageName string `protobuf:"bytes,1,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	// The module name (computed).
	ModuleName string `protobuf:"bytes,5,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	// In order to decouple code location and production resources, we refer
	// to the service through it's ID; which must remain constant during the
	// life of the service.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// A name for a person-user to read and refer to.
	Name        string              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description *Server_Description `protobuf:"bytes,23,opt,name=description,proto3" json:"description,omitempty"`
	// The computed list of dependency URLs of this server (direct and indirect).
	Import []string `protobuf:"bytes,4,rep,name=import,proto3" json:"import,omitempty"`
	// Framework-specific extensions.
	Ext []*anypb.Any `protobuf:"bytes,6,rep,name=ext,proto3" json:"ext,omitempty"`
	// All of the allocations performed in this server's dependency tree.
	Allocation      []*Allocation `protobuf:"bytes,7,rep,name=allocation,proto3" json:"allocation,omitempty"`
	Framework       Framework     `protobuf:"varint,8,opt,name=framework,proto3,enum=foundation.schema.Framework" json:"framework,omitempty"`
	IsStateful      bool          `protobuf:"varint,20,opt,name=is_stateful,json=isStateful,proto3" json:"is_stateful,omitempty"`
	DeployableClass string        `protobuf:"bytes,31,opt,name=deployable_class,json=deployableClass,proto3" json:"deployable_class,omitempty"`
	// This server is meant to be used for tests, and should not be deployed by default.
	Testonly bool `protobuf:"varint,21,opt,name=testonly,proto3" json:"testonly,omitempty"`
	// Indicates if a server should be considered for location-less invocations.
	// E.g. `ns deploy` should not deploy test only servers, unless explicitly mentioned.
	RunByDefault  bool                  `protobuf:"varint,29,opt,name=run_by_default,json=runByDefault,proto3" json:"run_by_default,omitempty"`
	MainContainer *SidecarContainer     `protobuf:"bytes,33,opt,name=main_container,json=mainContainer,proto3" json:"main_container,omitempty"`
	Service       []*Server_ServiceSpec `protobuf:"bytes,10,rep,name=service,proto3" json:"service,omitempty"`
	Ingress       []*Server_ServiceSpec `protobuf:"bytes,11,rep,name=ingress,proto3" json:"ingress,omitempty"`
	Reference     []*Reference          `protobuf:"bytes,12,rep,name=reference,proto3" json:"reference,omitempty"`
	// Set of dependencies specified explicitly by the user.
	UserImports []string `protobuf:"bytes,14,rep,name=user_imports,json=userImports,proto3" json:"user_imports,omitempty"`
	// Set of URL prefixes this server declares supporting.
	UrlMap []*Server_URLMapEntry `protobuf:"bytes,15,rep,name=url_map,json=urlMap,proto3" json:"url_map,omitempty"`
	// A set of ports that this server exports and require no configuration.
	StaticPort             []*Endpoint_Port                 `protobuf:"bytes,16,rep,name=static_port,json=staticPort,proto3" json:"static_port,omitempty"`
	EnvironmentRequirement []*Server_EnvironmentRequirement `protobuf:"bytes,24,rep,name=environment_requirement,json=environmentRequirement,proto3" json:"environment_requirement,omitempty"`
	// Includes file-level and inlined volumes.
	Volume       []*Volume          `protobuf:"bytes,26,rep,name=volume,proto3" json:"volume,omitempty"`
	ResourcePack *ResourcePack      `protobuf:"bytes,35,opt,name=resource_pack,json=resourcePack,proto3" json:"resource_pack,omitempty"`
	Permissions  *ServerPermissions `protobuf:"bytes,37,opt,name=permissions,proto3" json:"permissions,omitempty"`
	Probe        []*Probe           `protobuf:"bytes,38,rep,name=probe,proto3" json:"probe,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_schema_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_schema_server_proto_rawDescGZIP(), []int{0}
}

func (x *Server) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *Server) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *Server) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Server) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Server) GetDescription() *Server_Description {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Server) GetImport() []string {
	if x != nil {
		return x.Import
	}
	return nil
}

func (x *Server) GetExt() []*anypb.Any {
	if x != nil {
		return x.Ext
	}
	return nil
}

func (x *Server) GetAllocation() []*Allocation {
	if x != nil {
		return x.Allocation
	}
	return nil
}

func (x *Server) GetFramework() Framework {
	if x != nil {
		return x.Framework
	}
	return Framework_FRAMEWORK_UNSPECIFIED
}

func (x *Server) GetIsStateful() bool {
	if x != nil {
		return x.IsStateful
	}
	return false
}

func (x *Server) GetDeployableClass() string {
	if x != nil {
		return x.DeployableClass
	}
	return ""
}

func (x *Server) GetTestonly() bool {
	if x != nil {
		return x.Testonly
	}
	return false
}

func (x *Server) GetRunByDefault() bool {
	if x != nil {
		return x.RunByDefault
	}
	return false
}

func (x *Server) GetMainContainer() *SidecarContainer {
	if x != nil {
		return x.MainContainer
	}
	return nil
}

func (x *Server) GetService() []*Server_ServiceSpec {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *Server) GetIngress() []*Server_ServiceSpec {
	if x != nil {
		return x.Ingress
	}
	return nil
}

func (x *Server) GetReference() []*Reference {
	if x != nil {
		return x.Reference
	}
	return nil
}

func (x *Server) GetUserImports() []string {
	if x != nil {
		return x.UserImports
	}
	return nil
}

func (x *Server) GetUrlMap() []*Server_URLMapEntry {
	if x != nil {
		return x.UrlMap
	}
	return nil
}

func (x *Server) GetStaticPort() []*Endpoint_Port {
	if x != nil {
		return x.StaticPort
	}
	return nil
}

func (x *Server) GetEnvironmentRequirement() []*Server_EnvironmentRequirement {
	if x != nil {
		return x.EnvironmentRequirement
	}
	return nil
}

func (x *Server) GetVolume() []*Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

func (x *Server) GetResourcePack() *ResourcePack {
	if x != nil {
		return x.ResourcePack
	}
	return nil
}

func (x *Server) GetPermissions() *ServerPermissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *Server) GetProbe() []*Probe {
	if x != nil {
		return x.Probe
	}
	return nil
}

// Allocations for a tree of instanced values.
type Allocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance []*Allocation_Instance `protobuf:"bytes,1,rep,name=instance,proto3" json:"instance,omitempty"`
}

func (x *Allocation) Reset() {
	*x = Allocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Allocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Allocation) ProtoMessage() {}

func (x *Allocation) ProtoReflect() protoreflect.Message {
	mi := &file_schema_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Allocation.ProtoReflect.Descriptor instead.
func (*Allocation) Descriptor() ([]byte, []int) {
	return file_schema_server_proto_rawDescGZIP(), []int{1}
}

func (x *Allocation) GetInstance() []*Allocation_Instance {
	if x != nil {
		return x.Instance
	}
	return nil
}

type Instantiate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageName string `protobuf:"bytes,3,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	Type        string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// A unique name used to refer and configure this dependency.
	Name        string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Constructor *anypb.Any `protobuf:"bytes,2,opt,name=constructor,proto3" json:"constructor,omitempty"`
}

func (x *Instantiate) Reset() {
	*x = Instantiate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instantiate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instantiate) ProtoMessage() {}

func (x *Instantiate) ProtoReflect() protoreflect.Message {
	mi := &file_schema_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instantiate.ProtoReflect.Descriptor instead.
func (*Instantiate) Descriptor() ([]byte, []int) {
	return file_schema_server_proto_rawDescGZIP(), []int{2}
}

func (x *Instantiate) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *Instantiate) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Instantiate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Instantiate) GetConstructor() *anypb.Any {
	if x != nil {
		return x.Constructor
	}
	return nil
}

type RequiredStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner        string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"` // Package name.
	PersistentId string `protobuf:"bytes,2,opt,name=persistent_id,json=persistentId,proto3" json:"persistent_id,omitempty"`
	ByteCount    uint64 `protobuf:"varint,3,opt,name=byte_count,json=byteCount,proto3" json:"byte_count,omitempty"`
	MountPath    string `protobuf:"bytes,4,opt,name=mount_path,json=mountPath,proto3" json:"mount_path,omitempty"`
}

func (x *RequiredStorage) Reset() {
	*x = RequiredStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequiredStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequiredStorage) ProtoMessage() {}

func (x *RequiredStorage) ProtoReflect() protoreflect.Message {
	mi := &file_schema_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequiredStorage.ProtoReflect.Descriptor instead.
func (*RequiredStorage) Descriptor() ([]byte, []int) {
	return file_schema_server_proto_rawDescGZIP(), []int{3}
}

func (x *RequiredStorage) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *RequiredStorage) GetPersistentId() string {
	if x != nil {
		return x.PersistentId
	}
	return ""
}

func (x *RequiredStorage) GetByteCount() uint64 {
	if x != nil {
		return x.ByteCount
	}
	return 0
}

func (x *RequiredStorage) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

type ServerPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterRole []*PackageRef `protobuf:"bytes,1,rep,name=cluster_role,json=clusterRole,proto3" json:"cluster_role,omitempty"`
}

func (x *ServerPermissions) Reset() {
	*x = ServerPermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPermissions) ProtoMessage() {}

func (x *ServerPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_schema_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPermissions.ProtoReflect.Descriptor instead.
func (*ServerPermissions) Descriptor() ([]byte, []int) {
	return file_schema_server_proto_rawDescGZIP(), []int{4}
}

func (x *ServerPermissions) GetClusterRole() []*PackageRef {
	if x != nil {
		return x.ClusterRole
	}
	return nil
}

// Server extensions which are dynamically provided by tools.
type ServerExtension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner           string                `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`                                   // Package name.
	TargetServer    string                `protobuf:"bytes,2,opt,name=target_server,json=targetServer,proto3" json:"target_server,omitempty"` // Package name.
	Volume          []*Volume             `protobuf:"bytes,3,rep,name=volume,proto3" json:"volume,omitempty"`
	ExtendContainer []*ContainerExtension `protobuf:"bytes,5,rep,name=extend_container,json=extendContainer,proto3" json:"extend_container,omitempty"`
}

func (x *ServerExtension) Reset() {
	*x = ServerExtension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerExtension) ProtoMessage() {}

func (x *ServerExtension) ProtoReflect() protoreflect.Message {
	mi := &file_schema_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerExtension.ProtoReflect.Descriptor instead.
func (*ServerExtension) Descriptor() ([]byte, []int) {
	return file_schema_server_proto_rawDescGZIP(), []int{5}
}

func (x *ServerExtension) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ServerExtension) GetTargetServer() string {
	if x != nil {
		return x.TargetServer
	}
	return ""
}

func (x *ServerExtension) GetVolume() []*Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

func (x *ServerExtension) GetExtendContainer() []*ContainerExtension {
	if x != nil {
		return x.ExtendContainer
	}
	return nil
}

type Server_ServiceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label    string             `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"`
	Metadata []*ServiceMetadata `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty"`
	Port     *Endpoint_Port     `protobuf:"bytes,3,opt,name=port,proto3" json:"port,omitempty"`
	Internal bool               `protobuf:"varint,4,opt,name=internal,proto3" json:"internal,omitempty"` // This service is of no relevance for development.
}

func (x *Server_ServiceSpec) Reset() {
	*x = Server_ServiceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_ServiceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_ServiceSpec) ProtoMessage() {}

func (x *Server_ServiceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_schema_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_ServiceSpec.ProtoReflect.Descriptor instead.
func (*Server_ServiceSpec) Descriptor() ([]byte, []int) {
	return file_schema_server_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Server_ServiceSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Server_ServiceSpec) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Server_ServiceSpec) GetMetadata() []*ServiceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Server_ServiceSpec) GetPort() *Endpoint_Port {
	if x != nil {
		return x.Port
	}
	return nil
}

func (x *Server_ServiceSpec) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

type Server_URLMapEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PathPrefix  string `protobuf:"bytes,1,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	PackageName string `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	IngressName string `protobuf:"bytes,3,opt,name=ingress_name,json=ingressName,proto3" json:"ingress_name,omitempty"`
	Kind        string `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"`
}

func (x *Server_URLMapEntry) Reset() {
	*x = Server_URLMapEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_URLMapEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_URLMapEntry) ProtoMessage() {}

func (x *Server_URLMapEntry) ProtoReflect() protoreflect.Message {
	mi := &file_schema_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_URLMapEntry.ProtoReflect.Descriptor instead.
func (*Server_URLMapEntry) Descriptor() ([]byte, []int) {
	return file_schema_server_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Server_URLMapEntry) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

func (x *Server_URLMapEntry) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *Server_URLMapEntry) GetIngressName() string {
	if x != nil {
		return x.IngressName
	}
	return ""
}

func (x *Server_URLMapEntry) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type Server_Description struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label   string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Url     string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	IconUrl string `protobuf:"bytes,3,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
}

func (x *Server_Description) Reset() {
	*x = Server_Description{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_Description) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_Description) ProtoMessage() {}

func (x *Server_Description) ProtoReflect() protoreflect.Message {
	mi := &file_schema_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_Description.ProtoReflect.Descriptor instead.
func (*Server_Description) Descriptor() ([]byte, []int) {
	return file_schema_server_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Server_Description) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Server_Description) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Server_Description) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

type Server_EnvironmentRequirement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Package                     string   `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	EnvironmentHasLabel         []*Label `protobuf:"bytes,2,rep,name=environment_has_label,json=environmentHasLabel,proto3" json:"environment_has_label,omitempty"`
	EnvironmentDoesNotHaveLabel []*Label `protobuf:"bytes,3,rep,name=environment_does_not_have_label,json=environmentDoesNotHaveLabel,proto3" json:"environment_does_not_have_label,omitempty"`
}

func (x *Server_EnvironmentRequirement) Reset() {
	*x = Server_EnvironmentRequirement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_EnvironmentRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_EnvironmentRequirement) ProtoMessage() {}

func (x *Server_EnvironmentRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_schema_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_EnvironmentRequirement.ProtoReflect.Descriptor instead.
func (*Server_EnvironmentRequirement) Descriptor() ([]byte, []int) {
	return file_schema_server_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Server_EnvironmentRequirement) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *Server_EnvironmentRequirement) GetEnvironmentHasLabel() []*Label {
	if x != nil {
		return x.EnvironmentHasLabel
	}
	return nil
}

func (x *Server_EnvironmentRequirement) GetEnvironmentDoesNotHaveLabel() []*Label {
	if x != nil {
		return x.EnvironmentDoesNotHaveLabel
	}
	return nil
}

type Allocation_Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The source of the allocation.
	InstanceOwner string `protobuf:"bytes,1,opt,name=instance_owner,json=instanceOwner,proto3" json:"instance_owner,omitempty"`
	// The owning package of the fields being instantiated.
	PackageName string `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	// An unique name within the server for this allocation path.
	AllocName    string         `protobuf:"bytes,3,opt,name=alloc_name,json=allocName,proto3" json:"alloc_name,omitempty"`
	Instantiated []*Instantiate `protobuf:"bytes,4,rep,name=instantiated,proto3" json:"instantiated,omitempty"`
	// Allocations that happen as a result of this allocation (e.g. an instance
	// of a dependency).
	DownstreamAllocation []*Allocation `protobuf:"bytes,5,rep,name=downstream_allocation,json=downstreamAllocation,proto3" json:"downstream_allocation,omitempty"`
}

func (x *Allocation_Instance) Reset() {
	*x = Allocation_Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Allocation_Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Allocation_Instance) ProtoMessage() {}

func (x *Allocation_Instance) ProtoReflect() protoreflect.Message {
	mi := &file_schema_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Allocation_Instance.ProtoReflect.Descriptor instead.
func (*Allocation_Instance) Descriptor() ([]byte, []int) {
	return file_schema_server_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Allocation_Instance) GetInstanceOwner() string {
	if x != nil {
		return x.InstanceOwner
	}
	return ""
}

func (x *Allocation_Instance) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *Allocation_Instance) GetAllocName() string {
	if x != nil {
		return x.AllocName
	}
	return ""
}

func (x *Allocation_Instance) GetInstantiated() []*Instantiate {
	if x != nil {
		return x.Instantiated
	}
	return nil
}

func (x *Allocation_Instance) GetDownstreamAllocation() []*Allocation {
	if x != nil {
		return x.DownstreamAllocation
	}
	return nil
}

var File_schema_server_proto protoreflect.FileDescriptor

var file_schema_server_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x16, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x13, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe8, 0x0f, 0x0a,
	0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x47, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x26, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x77, 0x6f, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77,
	0x6f, 0x72, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x66,
	0x75, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x66, 0x75, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x72,
	0x75, 0x6e, 0x5f, 0x62, 0x79, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x75, 0x6e, 0x42, 0x79, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x4a, 0x0a, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53, 0x69,
	0x64, 0x65, 0x63, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0d,
	0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x3f, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f,
	0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x3a, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x3e,
	0x0a, 0x07, 0x75, 0x72, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x52, 0x4c, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x75, 0x72, 0x6c, 0x4d, 0x61, 0x70, 0x12, 0x41,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x10, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x69, 0x0a, 0x17, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x16, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12,
	0x44, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b,
	0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x46, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a,
	0x05, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x26, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x1a, 0xcf, 0x01,
	0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x3e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x1a,
	0x88, 0x01, 0x0a, 0x0b, 0x55, 0x52, 0x4c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x1a, 0x50, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x1a, 0xe0, 0x01, 0x0a,
	0x16, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x12, 0x4c, 0x0a, 0x15, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x68, 0x61, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x13, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x5e, 0x0a, 0x1f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x6f, 0x65, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x52, 0x1b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x6f, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x48, 0x61, 0x76, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4a,
	0x04, 0x08, 0x09, 0x10, 0x0a, 0x4a, 0x04, 0x08, 0x0d, 0x10, 0x0e, 0x4a, 0x04, 0x08, 0x11, 0x10,
	0x12, 0x4a, 0x04, 0x08, 0x13, 0x10, 0x14, 0x4a, 0x04, 0x08, 0x1b, 0x10, 0x1c, 0x4a, 0x04, 0x08,
	0x1c, 0x10, 0x1d, 0x4a, 0x04, 0x08, 0x1e, 0x10, 0x1f, 0x4a, 0x04, 0x08, 0x20, 0x10, 0x21, 0x4a,
	0x04, 0x08, 0x22, 0x10, 0x23, 0x4a, 0x04, 0x08, 0x12, 0x10, 0x13, 0x4a, 0x04, 0x08, 0x16, 0x10,
	0x17, 0x4a, 0x04, 0x08, 0x24, 0x10, 0x25, 0x22, 0xde, 0x02, 0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x8b, 0x02, 0x0a, 0x08, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x42, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x15, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x14, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x8a, 0x01, 0x0a, 0x0f,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79,
	0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x62, 0x79, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x55, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x40, 0x0a,
	0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x66, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x22,
	0xd7, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x31,
	0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x12, 0x50, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x2a, 0x59, 0x0a, 0x09, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x57,
	0x4f, 0x52, 0x4b, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x4f, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x50, 0x41,
	0x51, 0x55, 0x45, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x50, 0x41, 0x51, 0x55, 0x45, 0x5f,
	0x4e, 0x4f, 0x44, 0x45, 0x4a, 0x53, 0x10, 0x05, 0x22, 0x04, 0x08, 0x02, 0x10, 0x02, 0x22, 0x04,
	0x08, 0x03, 0x10, 0x03, 0x42, 0x25, 0x5a, 0x23, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_schema_server_proto_rawDescOnce sync.Once
	file_schema_server_proto_rawDescData = file_schema_server_proto_rawDesc
)

func file_schema_server_proto_rawDescGZIP() []byte {
	file_schema_server_proto_rawDescOnce.Do(func() {
		file_schema_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_schema_server_proto_rawDescData)
	})
	return file_schema_server_proto_rawDescData
}

var file_schema_server_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_schema_server_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_schema_server_proto_goTypes = []interface{}{
	(Framework)(0),                        // 0: foundation.schema.Framework
	(*Server)(nil),                        // 1: foundation.schema.Server
	(*Allocation)(nil),                    // 2: foundation.schema.Allocation
	(*Instantiate)(nil),                   // 3: foundation.schema.Instantiate
	(*RequiredStorage)(nil),               // 4: foundation.schema.RequiredStorage
	(*ServerPermissions)(nil),             // 5: foundation.schema.ServerPermissions
	(*ServerExtension)(nil),               // 6: foundation.schema.ServerExtension
	(*Server_ServiceSpec)(nil),            // 7: foundation.schema.Server.ServiceSpec
	(*Server_URLMapEntry)(nil),            // 8: foundation.schema.Server.URLMapEntry
	(*Server_Description)(nil),            // 9: foundation.schema.Server.Description
	(*Server_EnvironmentRequirement)(nil), // 10: foundation.schema.Server.EnvironmentRequirement
	(*Allocation_Instance)(nil),           // 11: foundation.schema.Allocation.Instance
	(*anypb.Any)(nil),                     // 12: google.protobuf.Any
	(*SidecarContainer)(nil),              // 13: foundation.schema.SidecarContainer
	(*Reference)(nil),                     // 14: foundation.schema.Reference
	(*Endpoint_Port)(nil),                 // 15: foundation.schema.Endpoint.Port
	(*Volume)(nil),                        // 16: foundation.schema.Volume
	(*ResourcePack)(nil),                  // 17: foundation.schema.ResourcePack
	(*Probe)(nil),                         // 18: foundation.schema.Probe
	(*PackageRef)(nil),                    // 19: foundation.schema.PackageRef
	(*ContainerExtension)(nil),            // 20: foundation.schema.ContainerExtension
	(*ServiceMetadata)(nil),               // 21: foundation.schema.ServiceMetadata
	(*Label)(nil),                         // 22: foundation.schema.Label
}
var file_schema_server_proto_depIdxs = []int32{
	9,  // 0: foundation.schema.Server.description:type_name -> foundation.schema.Server.Description
	12, // 1: foundation.schema.Server.ext:type_name -> google.protobuf.Any
	2,  // 2: foundation.schema.Server.allocation:type_name -> foundation.schema.Allocation
	0,  // 3: foundation.schema.Server.framework:type_name -> foundation.schema.Framework
	13, // 4: foundation.schema.Server.main_container:type_name -> foundation.schema.SidecarContainer
	7,  // 5: foundation.schema.Server.service:type_name -> foundation.schema.Server.ServiceSpec
	7,  // 6: foundation.schema.Server.ingress:type_name -> foundation.schema.Server.ServiceSpec
	14, // 7: foundation.schema.Server.reference:type_name -> foundation.schema.Reference
	8,  // 8: foundation.schema.Server.url_map:type_name -> foundation.schema.Server.URLMapEntry
	15, // 9: foundation.schema.Server.static_port:type_name -> foundation.schema.Endpoint.Port
	10, // 10: foundation.schema.Server.environment_requirement:type_name -> foundation.schema.Server.EnvironmentRequirement
	16, // 11: foundation.schema.Server.volume:type_name -> foundation.schema.Volume
	17, // 12: foundation.schema.Server.resource_pack:type_name -> foundation.schema.ResourcePack
	5,  // 13: foundation.schema.Server.permissions:type_name -> foundation.schema.ServerPermissions
	18, // 14: foundation.schema.Server.probe:type_name -> foundation.schema.Probe
	11, // 15: foundation.schema.Allocation.instance:type_name -> foundation.schema.Allocation.Instance
	12, // 16: foundation.schema.Instantiate.constructor:type_name -> google.protobuf.Any
	19, // 17: foundation.schema.ServerPermissions.cluster_role:type_name -> foundation.schema.PackageRef
	16, // 18: foundation.schema.ServerExtension.volume:type_name -> foundation.schema.Volume
	20, // 19: foundation.schema.ServerExtension.extend_container:type_name -> foundation.schema.ContainerExtension
	21, // 20: foundation.schema.Server.ServiceSpec.metadata:type_name -> foundation.schema.ServiceMetadata
	15, // 21: foundation.schema.Server.ServiceSpec.port:type_name -> foundation.schema.Endpoint.Port
	22, // 22: foundation.schema.Server.EnvironmentRequirement.environment_has_label:type_name -> foundation.schema.Label
	22, // 23: foundation.schema.Server.EnvironmentRequirement.environment_does_not_have_label:type_name -> foundation.schema.Label
	3,  // 24: foundation.schema.Allocation.Instance.instantiated:type_name -> foundation.schema.Instantiate
	2,  // 25: foundation.schema.Allocation.Instance.downstream_allocation:type_name -> foundation.schema.Allocation
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_schema_server_proto_init() }
func file_schema_server_proto_init() {
	if File_schema_server_proto != nil {
		return
	}
	file_schema_container_proto_init()
	file_schema_environment_proto_init()
	file_schema_networking_proto_init()
	file_schema_probe_proto_init()
	file_schema_reference_proto_init()
	file_schema_resource_proto_init()
	file_schema_volume_proto_init()
	file_schema_package_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_schema_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Allocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instantiate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequiredStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerPermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerExtension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_ServiceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_URLMapEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_Description); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_EnvironmentRequirement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Allocation_Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schema_server_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schema_server_proto_goTypes,
		DependencyIndexes: file_schema_server_proto_depIdxs,
		EnumInfos:         file_schema_server_proto_enumTypes,
		MessageInfos:      file_schema_server_proto_msgTypes,
	}.Build()
	File_schema_server_proto = out.File
	file_schema_server_proto_rawDesc = nil
	file_schema_server_proto_goTypes = nil
	file_schema_server_proto_depIdxs = nil
}
