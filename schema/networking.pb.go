// Copyright 2022 Namespace Labs Inc; All rights reserved.
// Licensed under the EARLY ACCESS SOFTWARE LICENSE AGREEMENT
// available at http://github.com/namespacelabs/foundation

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: schema/networking.proto

package schema

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Endpoint_Type int32

const (
	Endpoint_INGRESS_UNSPECIFIED Endpoint_Type = 0 // Defaults to PRIVATE in services.
	Endpoint_PRIVATE             Endpoint_Type = 1
	Endpoint_INTERNET_FACING     Endpoint_Type = 2
)

// Enum value maps for Endpoint_Type.
var (
	Endpoint_Type_name = map[int32]string{
		0: "INGRESS_UNSPECIFIED",
		1: "PRIVATE",
		2: "INTERNET_FACING",
	}
	Endpoint_Type_value = map[string]int32{
		"INGRESS_UNSPECIFIED": 0,
		"PRIVATE":             1,
		"INTERNET_FACING":     2,
	}
)

func (x Endpoint_Type) Enum() *Endpoint_Type {
	p := new(Endpoint_Type)
	*p = x
	return p
}

func (x Endpoint_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Endpoint_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_networking_proto_enumTypes[0].Descriptor()
}

func (Endpoint_Type) Type() protoreflect.EnumType {
	return &file_schema_networking_proto_enumTypes[0]
}

func (x Endpoint_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Endpoint_Type.Descriptor instead.
func (Endpoint_Type) EnumDescriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{0, 0}
}

type Domain_ManagedType int32

const (
	Domain_MANAGED_UNKNOWN            Domain_ManagedType = 0
	Domain_LOCAL_MANAGED              Domain_ManagedType = 1
	Domain_CLOUD_MANAGED              Domain_ManagedType = 2
	Domain_USER_SPECIFIED             Domain_ManagedType = 3
	Domain_USER_SPECIFIED_TLS_MANAGED Domain_ManagedType = 4
)

// Enum value maps for Domain_ManagedType.
var (
	Domain_ManagedType_name = map[int32]string{
		0: "MANAGED_UNKNOWN",
		1: "LOCAL_MANAGED",
		2: "CLOUD_MANAGED",
		3: "USER_SPECIFIED",
		4: "USER_SPECIFIED_TLS_MANAGED",
	}
	Domain_ManagedType_value = map[string]int32{
		"MANAGED_UNKNOWN":            0,
		"LOCAL_MANAGED":              1,
		"CLOUD_MANAGED":              2,
		"USER_SPECIFIED":             3,
		"USER_SPECIFIED_TLS_MANAGED": 4,
	}
)

func (x Domain_ManagedType) Enum() *Domain_ManagedType {
	p := new(Domain_ManagedType)
	*p = x
	return p
}

func (x Domain_ManagedType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Domain_ManagedType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_networking_proto_enumTypes[1].Descriptor()
}

func (Domain_ManagedType) Type() protoreflect.EnumType {
	return &file_schema_networking_proto_enumTypes[1]
}

func (x Domain_ManagedType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Domain_ManagedType.Descriptor instead.
func (Domain_ManagedType) EnumDescriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{5, 0}
}

type Endpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Endpoint_Type `protobuf:"varint,1,opt,name=type,proto3,enum=foundation.schema.Endpoint_Type" json:"type,omitempty"`
	// The tuple (endpoint_owner, service_name) uniquely identifies an endpoint.
	ServiceName     string                      `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	EndpointOwner   string                      `protobuf:"bytes,4,opt,name=endpoint_owner,json=endpointOwner,proto3" json:"endpoint_owner,omitempty"` // Package name.
	Port            *Endpoint_Port              `protobuf:"bytes,5,opt,name=port,proto3" json:"port,omitempty"`
	AllocatedName   string                      `protobuf:"bytes,6,opt,name=allocated_name,json=allocatedName,proto3" json:"allocated_name,omitempty"`
	ServerOwner     string                      `protobuf:"bytes,7,opt,name=server_owner,json=serverOwner,proto3" json:"server_owner,omitempty"` // Package name.
	ServiceMetadata []*ServiceMetadata          `protobuf:"bytes,8,rep,name=service_metadata,json=serviceMetadata,proto3" json:"service_metadata,omitempty"`
	HttpPath        []*Endpoint_IngressHttpPath `protobuf:"bytes,9,rep,name=http_path,json=httpPath,proto3" json:"http_path,omitempty"` // Only valid if type=INTERNET_FACING.
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_networking_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_schema_networking_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{0}
}

func (x *Endpoint) GetType() Endpoint_Type {
	if x != nil {
		return x.Type
	}
	return Endpoint_INGRESS_UNSPECIFIED
}

func (x *Endpoint) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Endpoint) GetEndpointOwner() string {
	if x != nil {
		return x.EndpointOwner
	}
	return ""
}

func (x *Endpoint) GetPort() *Endpoint_Port {
	if x != nil {
		return x.Port
	}
	return nil
}

func (x *Endpoint) GetAllocatedName() string {
	if x != nil {
		return x.AllocatedName
	}
	return ""
}

func (x *Endpoint) GetServerOwner() string {
	if x != nil {
		return x.ServerOwner
	}
	return ""
}

func (x *Endpoint) GetServiceMetadata() []*ServiceMetadata {
	if x != nil {
		return x.ServiceMetadata
	}
	return nil
}

func (x *Endpoint) GetHttpPath() []*Endpoint_IngressHttpPath {
	if x != nil {
		return x.HttpPath
	}
	return nil
}

type InternalEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerOwner     string             `protobuf:"bytes,1,opt,name=server_owner,json=serverOwner,proto3" json:"server_owner,omitempty"` // Package name.
	Port            *Endpoint_Port     `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	ServiceMetadata []*ServiceMetadata `protobuf:"bytes,3,rep,name=service_metadata,json=serviceMetadata,proto3" json:"service_metadata,omitempty"`
}

func (x *InternalEndpoint) Reset() {
	*x = InternalEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_networking_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalEndpoint) ProtoMessage() {}

func (x *InternalEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_schema_networking_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalEndpoint.ProtoReflect.Descriptor instead.
func (*InternalEndpoint) Descriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{1}
}

func (x *InternalEndpoint) GetServerOwner() string {
	if x != nil {
		return x.ServerOwner
	}
	return ""
}

func (x *InternalEndpoint) GetPort() *Endpoint_Port {
	if x != nil {
		return x.Port
	}
	return nil
}

func (x *InternalEndpoint) GetServiceMetadata() []*ServiceMetadata {
	if x != nil {
		return x.ServiceMetadata
	}
	return nil
}

type IngressFragment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Owner       string                                `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"` // Package name.
	Domain      *Domain                               `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	Endpoint    *Endpoint                             `protobuf:"bytes,6,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	HttpPath    []*IngressFragment_IngressHttpPath    `protobuf:"bytes,4,rep,name=http_path,json=httpPath,proto3" json:"http_path,omitempty"`
	GrpcService []*IngressFragment_IngressGrpcService `protobuf:"bytes,7,rep,name=grpc_service,json=grpcService,proto3" json:"grpc_service,omitempty"`
	// Accepted: HttpCors.
	Extension []*anypb.Any `protobuf:"bytes,5,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *IngressFragment) Reset() {
	*x = IngressFragment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_networking_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngressFragment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngressFragment) ProtoMessage() {}

func (x *IngressFragment) ProtoReflect() protoreflect.Message {
	mi := &file_schema_networking_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngressFragment.ProtoReflect.Descriptor instead.
func (*IngressFragment) Descriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{2}
}

func (x *IngressFragment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IngressFragment) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *IngressFragment) GetDomain() *Domain {
	if x != nil {
		return x.Domain
	}
	return nil
}

func (x *IngressFragment) GetEndpoint() *Endpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *IngressFragment) GetHttpPath() []*IngressFragment_IngressHttpPath {
	if x != nil {
		return x.HttpPath
	}
	return nil
}

func (x *IngressFragment) GetGrpcService() []*IngressFragment_IngressGrpcService {
	if x != nil {
		return x.GrpcService
	}
	return nil
}

func (x *IngressFragment) GetExtension() []*anypb.Any {
	if x != nil {
		return x.Extension
	}
	return nil
}

type IngressFragmentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IngressFragment []*IngressFragment `protobuf:"bytes,1,rep,name=ingress_fragment,json=ingressFragment,proto3" json:"ingress_fragment,omitempty"`
}

func (x *IngressFragmentList) Reset() {
	*x = IngressFragmentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_networking_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngressFragmentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngressFragmentList) ProtoMessage() {}

func (x *IngressFragmentList) ProtoReflect() protoreflect.Message {
	mi := &file_schema_networking_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngressFragmentList.ProtoReflect.Descriptor instead.
func (*IngressFragmentList) Descriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{3}
}

func (x *IngressFragmentList) GetIngressFragment() []*IngressFragment {
	if x != nil {
		return x.IngressFragment
	}
	return nil
}

type HttpCors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled       bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	AllowedOrigin []string `protobuf:"bytes,2,rep,name=allowed_origin,json=allowedOrigin,proto3" json:"allowed_origin,omitempty"`
}

func (x *HttpCors) Reset() {
	*x = HttpCors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_networking_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpCors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpCors) ProtoMessage() {}

func (x *HttpCors) ProtoReflect() protoreflect.Message {
	mi := &file_schema_networking_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpCors.ProtoReflect.Descriptor instead.
func (*HttpCors) Descriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{4}
}

func (x *HttpCors) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *HttpCors) GetAllowedOrigin() []string {
	if x != nil {
		return x.AllowedOrigin
	}
	return nil
}

type Domain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fqdn        string              `protobuf:"bytes,1,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Certificate *Domain_Certificate `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Managed     Domain_ManagedType  `protobuf:"varint,3,opt,name=managed,proto3,enum=foundation.schema.Domain_ManagedType" json:"managed,omitempty"`
}

func (x *Domain) Reset() {
	*x = Domain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_networking_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Domain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Domain) ProtoMessage() {}

func (x *Domain) ProtoReflect() protoreflect.Message {
	mi := &file_schema_networking_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Domain.ProtoReflect.Descriptor instead.
func (*Domain) Descriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{5}
}

func (x *Domain) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *Domain) GetCertificate() *Domain_Certificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *Domain) GetManaged() Domain_ManagedType {
	if x != nil {
		return x.Managed
	}
	return Domain_MANAGED_UNKNOWN
}

type ServiceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind     string     `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Protocol string     `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Details  *anypb.Any `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ServiceMetadata) Reset() {
	*x = ServiceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_networking_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMetadata) ProtoMessage() {}

func (x *ServiceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_schema_networking_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMetadata.ProtoReflect.Descriptor instead.
func (*ServiceMetadata) Descriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{6}
}

func (x *ServiceMetadata) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ServiceMetadata) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ServiceMetadata) GetDetails() *anypb.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

type HttpUrlMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry []*HttpUrlMap_Entry `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty"`
}

func (x *HttpUrlMap) Reset() {
	*x = HttpUrlMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_networking_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpUrlMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpUrlMap) ProtoMessage() {}

func (x *HttpUrlMap) ProtoReflect() protoreflect.Message {
	mi := &file_schema_networking_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpUrlMap.ProtoReflect.Descriptor instead.
func (*HttpUrlMap) Descriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{7}
}

func (x *HttpUrlMap) GetEntry() []*HttpUrlMap_Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type GrpcHttpTranscoding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Includes the service proto definition, and its dependencies.
	FileDescriptorSet *descriptorpb.FileDescriptorSet `protobuf:"bytes,1,opt,name=file_descriptor_set,json=fileDescriptorSet,proto3" json:"file_descriptor_set,omitempty"`
}

func (x *GrpcHttpTranscoding) Reset() {
	*x = GrpcHttpTranscoding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_networking_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcHttpTranscoding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcHttpTranscoding) ProtoMessage() {}

func (x *GrpcHttpTranscoding) ProtoReflect() protoreflect.Message {
	mi := &file_schema_networking_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcHttpTranscoding.ProtoReflect.Descriptor instead.
func (*GrpcHttpTranscoding) Descriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{8}
}

func (x *GrpcHttpTranscoding) GetFileDescriptorSet() *descriptorpb.FileDescriptorSet {
	if x != nil {
		return x.FileDescriptorSet
	}
	return nil
}

type Endpoint_Port struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ContainerPort int32  `protobuf:"varint,2,opt,name=container_port,json=containerPort,proto3" json:"container_port,omitempty"`
}

func (x *Endpoint_Port) Reset() {
	*x = Endpoint_Port{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_networking_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Endpoint_Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint_Port) ProtoMessage() {}

func (x *Endpoint_Port) ProtoReflect() protoreflect.Message {
	mi := &file_schema_networking_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint_Port.ProtoReflect.Descriptor instead.
func (*Endpoint_Port) Descriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Endpoint_Port) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Endpoint_Port) GetContainerPort() int32 {
	if x != nil {
		return x.ContainerPort
	}
	return 0
}

type Endpoint_IngressHttpPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string         `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Kind    string         `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Owner   string         `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"` // Package name.
	Service string         `protobuf:"bytes,4,opt,name=service,proto3" json:"service,omitempty"`
	Port    *Endpoint_Port `protobuf:"bytes,5,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *Endpoint_IngressHttpPath) Reset() {
	*x = Endpoint_IngressHttpPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_networking_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Endpoint_IngressHttpPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint_IngressHttpPath) ProtoMessage() {}

func (x *Endpoint_IngressHttpPath) ProtoReflect() protoreflect.Message {
	mi := &file_schema_networking_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint_IngressHttpPath.ProtoReflect.Descriptor instead.
func (*Endpoint_IngressHttpPath) Descriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Endpoint_IngressHttpPath) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Endpoint_IngressHttpPath) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Endpoint_IngressHttpPath) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Endpoint_IngressHttpPath) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Endpoint_IngressHttpPath) GetPort() *Endpoint_Port {
	if x != nil {
		return x.Port
	}
	return nil
}

type IngressFragment_IngressHttpPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string         `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Kind    string         `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Owner   string         `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`     // Package name.
	Service string         `protobuf:"bytes,4,opt,name=service,proto3" json:"service,omitempty"` // Backend service.
	Port    *Endpoint_Port `protobuf:"bytes,5,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *IngressFragment_IngressHttpPath) Reset() {
	*x = IngressFragment_IngressHttpPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_networking_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngressFragment_IngressHttpPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngressFragment_IngressHttpPath) ProtoMessage() {}

func (x *IngressFragment_IngressHttpPath) ProtoReflect() protoreflect.Message {
	mi := &file_schema_networking_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngressFragment_IngressHttpPath.ProtoReflect.Descriptor instead.
func (*IngressFragment_IngressHttpPath) Descriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{2, 0}
}

func (x *IngressFragment_IngressHttpPath) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *IngressFragment_IngressHttpPath) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *IngressFragment_IngressHttpPath) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *IngressFragment_IngressHttpPath) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *IngressFragment_IngressHttpPath) GetPort() *Endpoint_Port {
	if x != nil {
		return x.Port
	}
	return nil
}

type IngressFragment_IngressGrpcService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrpcService string         `protobuf:"bytes,1,opt,name=grpc_service,json=grpcService,proto3" json:"grpc_service,omitempty"` // Fully qualified name.
	Owner       string         `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`                                // Package name.
	Service     string         `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`                            // Backing service.
	Method      []string       `protobuf:"bytes,5,rep,name=method,proto3" json:"method,omitempty"`                              // If not set, forward all methods.
	Port        *Endpoint_Port `protobuf:"bytes,4,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *IngressFragment_IngressGrpcService) Reset() {
	*x = IngressFragment_IngressGrpcService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_networking_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngressFragment_IngressGrpcService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngressFragment_IngressGrpcService) ProtoMessage() {}

func (x *IngressFragment_IngressGrpcService) ProtoReflect() protoreflect.Message {
	mi := &file_schema_networking_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngressFragment_IngressGrpcService.ProtoReflect.Descriptor instead.
func (*IngressFragment_IngressGrpcService) Descriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{2, 1}
}

func (x *IngressFragment_IngressGrpcService) GetGrpcService() string {
	if x != nil {
		return x.GrpcService
	}
	return ""
}

func (x *IngressFragment_IngressGrpcService) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *IngressFragment_IngressGrpcService) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *IngressFragment_IngressGrpcService) GetMethod() []string {
	if x != nil {
		return x.Method
	}
	return nil
}

func (x *IngressFragment_IngressGrpcService) GetPort() *Endpoint_Port {
	if x != nil {
		return x.Port
	}
	return nil
}

type Domain_Certificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrivateKey        []byte `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	CertificateBundle []byte `protobuf:"bytes,2,opt,name=certificate_bundle,json=certificateBundle,proto3" json:"certificate_bundle,omitempty"`
}

func (x *Domain_Certificate) Reset() {
	*x = Domain_Certificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_networking_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Domain_Certificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Domain_Certificate) ProtoMessage() {}

func (x *Domain_Certificate) ProtoReflect() protoreflect.Message {
	mi := &file_schema_networking_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Domain_Certificate.ProtoReflect.Descriptor instead.
func (*Domain_Certificate) Descriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Domain_Certificate) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *Domain_Certificate) GetCertificateBundle() []byte {
	if x != nil {
		return x.CertificateBundle
	}
	return nil
}

type HttpUrlMap_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PathPrefix string `protobuf:"bytes,1,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	Kind       string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
}

func (x *HttpUrlMap_Entry) Reset() {
	*x = HttpUrlMap_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_networking_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpUrlMap_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpUrlMap_Entry) ProtoMessage() {}

func (x *HttpUrlMap_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_schema_networking_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpUrlMap_Entry.ProtoReflect.Descriptor instead.
func (*HttpUrlMap_Entry) Descriptor() ([]byte, []int) {
	return file_schema_networking_proto_rawDescGZIP(), []int{7, 0}
}

func (x *HttpUrlMap_Entry) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

func (x *HttpUrlMap_Entry) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

var File_schema_networking_proto protoreflect.FileDescriptor

var file_schema_networking_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x1a, 0x19, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd1, 0x05, 0x0a, 0x08, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x09, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x48, 0x74, 0x74,
	0x70, 0x50, 0x61, 0x74, 0x68, 0x52, 0x08, 0x68, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x1a,
	0x41, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x6f,
	0x72, 0x74, 0x1a, 0x9f, 0x01, 0x0a, 0x0f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x48, 0x74,
	0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x41, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13,
	0x49, 0x4e, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x45, 0x54, 0x5f, 0x46,
	0x41, 0x43, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0xba, 0x01,
	0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x4d, 0x0a, 0x10, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe0, 0x05, 0x0a, 0x0f, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x37, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x09, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x52, 0x08, 0x68, 0x74, 0x74,
	0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x58, 0x0a, 0x0c, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x47, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x0b, 0x67, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x32, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x1a, 0x9f, 0x01, 0x0a, 0x0f, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x48,
	0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x34, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0xb5, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x47, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x67, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x64, 0x0a,
	0x13, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x10, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x08, 0x48, 0x74, 0x74, 0x70, 0x43, 0x6f, 0x72, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x22, 0x83, 0x03, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x71, 0x64, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12,
	0x47, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x1a, 0x5d, 0x0a, 0x0b, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x7c, 0x0a, 0x0b, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x41, 0x4e, 0x41, 0x47,
	0x45, 0x44, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x54, 0x4c, 0x53, 0x5f, 0x4d, 0x41, 0x4e,
	0x41, 0x47, 0x45, 0x44, 0x10, 0x04, 0x22, 0x71, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x2e, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x0a, 0x48, 0x74,
	0x74, 0x70, 0x55, 0x72, 0x6c, 0x4d, 0x61, 0x70, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x55, 0x72, 0x6c, 0x4d, 0x61, 0x70, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x1a, 0x3c, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x22, 0x69, 0x0a, 0x13, 0x47, 0x72, 0x70, 0x63, 0x48, 0x74, 0x74, 0x70, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x52, 0x0a, 0x13, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x52, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x42, 0x25, 0x5a, 0x23,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x64, 0x65,
	0x76, 0x2f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schema_networking_proto_rawDescOnce sync.Once
	file_schema_networking_proto_rawDescData = file_schema_networking_proto_rawDesc
)

func file_schema_networking_proto_rawDescGZIP() []byte {
	file_schema_networking_proto_rawDescOnce.Do(func() {
		file_schema_networking_proto_rawDescData = protoimpl.X.CompressGZIP(file_schema_networking_proto_rawDescData)
	})
	return file_schema_networking_proto_rawDescData
}

var file_schema_networking_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_schema_networking_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_schema_networking_proto_goTypes = []interface{}{
	(Endpoint_Type)(0),                         // 0: foundation.schema.Endpoint.Type
	(Domain_ManagedType)(0),                    // 1: foundation.schema.Domain.ManagedType
	(*Endpoint)(nil),                           // 2: foundation.schema.Endpoint
	(*InternalEndpoint)(nil),                   // 3: foundation.schema.InternalEndpoint
	(*IngressFragment)(nil),                    // 4: foundation.schema.IngressFragment
	(*IngressFragmentList)(nil),                // 5: foundation.schema.IngressFragmentList
	(*HttpCors)(nil),                           // 6: foundation.schema.HttpCors
	(*Domain)(nil),                             // 7: foundation.schema.Domain
	(*ServiceMetadata)(nil),                    // 8: foundation.schema.ServiceMetadata
	(*HttpUrlMap)(nil),                         // 9: foundation.schema.HttpUrlMap
	(*GrpcHttpTranscoding)(nil),                // 10: foundation.schema.GrpcHttpTranscoding
	(*Endpoint_Port)(nil),                      // 11: foundation.schema.Endpoint.Port
	(*Endpoint_IngressHttpPath)(nil),           // 12: foundation.schema.Endpoint.IngressHttpPath
	(*IngressFragment_IngressHttpPath)(nil),    // 13: foundation.schema.IngressFragment.IngressHttpPath
	(*IngressFragment_IngressGrpcService)(nil), // 14: foundation.schema.IngressFragment.IngressGrpcService
	(*Domain_Certificate)(nil),                 // 15: foundation.schema.Domain.Certificate
	(*HttpUrlMap_Entry)(nil),                   // 16: foundation.schema.HttpUrlMap.Entry
	(*anypb.Any)(nil),                          // 17: google.protobuf.Any
	(*descriptorpb.FileDescriptorSet)(nil),     // 18: google.protobuf.FileDescriptorSet
}
var file_schema_networking_proto_depIdxs = []int32{
	0,  // 0: foundation.schema.Endpoint.type:type_name -> foundation.schema.Endpoint.Type
	11, // 1: foundation.schema.Endpoint.port:type_name -> foundation.schema.Endpoint.Port
	8,  // 2: foundation.schema.Endpoint.service_metadata:type_name -> foundation.schema.ServiceMetadata
	12, // 3: foundation.schema.Endpoint.http_path:type_name -> foundation.schema.Endpoint.IngressHttpPath
	11, // 4: foundation.schema.InternalEndpoint.port:type_name -> foundation.schema.Endpoint.Port
	8,  // 5: foundation.schema.InternalEndpoint.service_metadata:type_name -> foundation.schema.ServiceMetadata
	7,  // 6: foundation.schema.IngressFragment.domain:type_name -> foundation.schema.Domain
	2,  // 7: foundation.schema.IngressFragment.endpoint:type_name -> foundation.schema.Endpoint
	13, // 8: foundation.schema.IngressFragment.http_path:type_name -> foundation.schema.IngressFragment.IngressHttpPath
	14, // 9: foundation.schema.IngressFragment.grpc_service:type_name -> foundation.schema.IngressFragment.IngressGrpcService
	17, // 10: foundation.schema.IngressFragment.extension:type_name -> google.protobuf.Any
	4,  // 11: foundation.schema.IngressFragmentList.ingress_fragment:type_name -> foundation.schema.IngressFragment
	15, // 12: foundation.schema.Domain.certificate:type_name -> foundation.schema.Domain.Certificate
	1,  // 13: foundation.schema.Domain.managed:type_name -> foundation.schema.Domain.ManagedType
	17, // 14: foundation.schema.ServiceMetadata.details:type_name -> google.protobuf.Any
	16, // 15: foundation.schema.HttpUrlMap.entry:type_name -> foundation.schema.HttpUrlMap.Entry
	18, // 16: foundation.schema.GrpcHttpTranscoding.file_descriptor_set:type_name -> google.protobuf.FileDescriptorSet
	11, // 17: foundation.schema.Endpoint.IngressHttpPath.port:type_name -> foundation.schema.Endpoint.Port
	11, // 18: foundation.schema.IngressFragment.IngressHttpPath.port:type_name -> foundation.schema.Endpoint.Port
	11, // 19: foundation.schema.IngressFragment.IngressGrpcService.port:type_name -> foundation.schema.Endpoint.Port
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_schema_networking_proto_init() }
func file_schema_networking_proto_init() {
	if File_schema_networking_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_schema_networking_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Endpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_networking_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_networking_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngressFragment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_networking_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngressFragmentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_networking_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpCors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_networking_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Domain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_networking_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_networking_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpUrlMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_networking_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcHttpTranscoding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_networking_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Endpoint_Port); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_networking_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Endpoint_IngressHttpPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_networking_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngressFragment_IngressHttpPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_networking_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngressFragment_IngressGrpcService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_networking_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Domain_Certificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_networking_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpUrlMap_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schema_networking_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schema_networking_proto_goTypes,
		DependencyIndexes: file_schema_networking_proto_depIdxs,
		EnumInfos:         file_schema_networking_proto_enumTypes,
		MessageInfos:      file_schema_networking_proto_msgTypes,
	}.Build()
	File_schema_networking_proto = out.File
	file_schema_networking_proto_rawDesc = nil
	file_schema_networking_proto_goTypes = nil
	file_schema_networking_proto_depIdxs = nil
}
