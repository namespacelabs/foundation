// This file was automatically generated by Foundation.
// DO NOT EDIT. To update, re-run `fn generate`.

package awss3

import (
	"context"
	"namespacelabs.dev/foundation/std/go/core"
	"namespacelabs.dev/foundation/std/go/server"
	"namespacelabs.dev/foundation/universe/aws/s3"
)

// Dependencies that are instantiated once for the lifetime of the service.
type ServiceDeps struct {
	Bucket *s3.Bucket
}

// Verify that WireService is present and has the appropriate type.
type checkWireService func(context.Context, server.Registrar, ServiceDeps)

var _ checkWireService = WireService

var (
	Package__9ikhmo = &core.Package{
		PackageName: "namespacelabs.dev/foundation/std/testdata/service/awss3",
	}

	Provider__9ikhmo = core.Provider{
		Package:     Package__9ikhmo,
		Instantiate: makeDeps__9ikhmo,
	}
)

func makeDeps__9ikhmo(ctx context.Context, di core.Dependencies) (interface{}, error) {
	var deps ServiceDeps
	var err error

	err = di.Instantiate(ctx, s3.Provider__eoj2dq, func(ctx context.Context, v interface{}) (err error) { // region: "us-east-2"
		// bucket_name: "ns-foundation-foo-bucket-test3"
		p := &s3.BucketConfig{}
		core.MustUnwrapProto("Cgl1cy1lYXN0LTISHm5zLWZvdW5kYXRpb24tZm9vLWJ1Y2tldC10ZXN0Mw==", p)

		if deps.Bucket, err = s3.ProvideBucket(ctx, p, v.(s3.ExtensionDeps)); err != nil {
			return err
		}
		return nil
	})
	if err != nil {
		return nil, err
	}

	return deps, nil
}
