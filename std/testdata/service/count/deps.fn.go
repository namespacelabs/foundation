// This file was automatically generated by Namespace.
// DO NOT EDIT. To update, re-run `ns generate`.

package count

import (
	"context"
	"namespacelabs.dev/foundation/std/go/core"
	"namespacelabs.dev/foundation/std/go/server"
	"namespacelabs.dev/foundation/std/testdata/counter"
)

// Dependencies that are instantiated once for the lifetime of the service.
type ServiceDeps struct {
	One *counter.Counter
	Two *counter.Counter
}

// Verify that WireService is present and has the appropriate type.
type checkWireService func(context.Context, server.Registrar, ServiceDeps)

var _ checkWireService = WireService

var (
	Package__0lo23l = &core.Package{
		PackageName: "namespacelabs.dev/foundation/std/testdata/service/count",
	}

	Provider__0lo23l = core.Provider{
		Package:     Package__0lo23l,
		Instantiate: makeDeps__0lo23l,
	}
)

func makeDeps__0lo23l(ctx context.Context, di core.Dependencies) (_ interface{}, err error) {
	var deps ServiceDeps

	if err := di.Instantiate(ctx, counter.Provider__2mbd4q__Counter, func(ctx context.Context, scoped interface{}) (err error) {

		// name: "one"
		if deps.One, err = counter.ProvideCounter(ctx, core.MustUnwrapProto("CgNvbmU=", &counter.Input{}).(*counter.Input), scoped.(counter.CounterDeps)); err != nil {
			return err
		}
		return nil
	}); err != nil {
		return nil, err
	}

	if err := di.Instantiate(ctx, counter.Provider__2mbd4q__Counter, func(ctx context.Context, scoped interface{}) (err error) {

		// name: "two"
		if deps.Two, err = counter.ProvideCounter(ctx, core.MustUnwrapProto("CgN0d28=", &counter.Input{}).(*counter.Input), scoped.(counter.CounterDeps)); err != nil {
			return err
		}
		return nil
	}); err != nil {
		return nil, err
	}

	return deps, nil
}
