// This file was automatically generated by Foundation.
// DO NOT EDIT. To update, re-run `fn generate`.

package minio

import (
	"context"
	"namespacelabs.dev/foundation/std/go/core"
	"namespacelabs.dev/foundation/std/go/server"
	"namespacelabs.dev/foundation/universe/aws/s3"
	s31 "namespacelabs.dev/foundation/universe/development/minio/s3"
)

// Dependencies that are instantiated once for the lifetime of the service.
type ServiceDeps struct {
	Bucket *s3.Bucket
}

// Verify that WireService is present and has the appropriate type.
type checkWireService func(context.Context, server.Registrar, ServiceDeps)

var _ checkWireService = WireService

var (
	Package__k9bs2r = &core.Package{
		PackageName: "namespacelabs.dev/foundation/std/testdata/service/minio",
	}

	Provider__k9bs2r = core.Provider{
		Package:     Package__k9bs2r,
		Instantiate: makeDeps__k9bs2r,
	}
)

func makeDeps__k9bs2r(ctx context.Context, di core.Dependencies) (_ interface{}, err error) {
	var deps ServiceDeps

	if err := di.Instantiate(ctx, s31.Provider__eksqhd, func(ctx context.Context, v interface{}) (err error) {
		// bucket_name: "test-minio-bucket"
		if deps.Bucket, err = s31.ProvideBucket(ctx, core.MustUnwrapProto("EhF0ZXN0LW1pbmlvLWJ1Y2tldA==", &s31.BucketConfig{}).(*s31.BucketConfig), v.(s31.ExtensionDeps)); err != nil {
			return err
		}
		return nil
	}); err != nil {
		return nil, err
	}

	return deps, nil
}
