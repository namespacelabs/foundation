// This file was automatically generated by Foundation.
// DO NOT EDIT. To update, re-run `ns generate`.

package logging

import (
	"context"
	"namespacelabs.dev/foundation/std/go/core"
	"namespacelabs.dev/foundation/std/go/grpc/interceptors"
)

// Dependencies that are instantiated once for the lifetime of the extension.
type ExtensionDeps struct {
	Interceptors interceptors.Registration
}

var (
	Package__16bc0q = &core.Package{
		PackageName: "namespacelabs.dev/foundation/std/grpc/logging",
	}

	Provider__16bc0q = core.Provider{
		Package:     Package__16bc0q,
		Instantiate: makeDeps__16bc0q,
	}

	Initializers__16bc0q = []*core.Initializer{
		{
			Package: Package__16bc0q,
			Do: func(ctx context.Context, di core.Dependencies) error {
				return di.Instantiate(ctx, Provider__16bc0q, func(ctx context.Context, v interface{}) error {
					return Prepare(ctx, v.(ExtensionDeps))
				})
			},
		},
	}
)

func makeDeps__16bc0q(ctx context.Context, di core.Dependencies) (_ interface{}, err error) {
	var deps ExtensionDeps

	if deps.Interceptors, err = interceptors.ProvideInterceptorRegistration(ctx, nil); err != nil {
		return nil, err
	}

	return deps, nil
}
