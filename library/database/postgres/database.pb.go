// Copyright 2022 Namespace Labs Inc; All rights reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: library/database/postgres/database.proto

package postgres

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	schema "namespacelabs.dev/foundation/schema"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DatabaseIntent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Schema []*schema.FileContents `protobuf:"bytes,2,rep,name=schema,proto3" json:"schema,omitempty"`
}

func (x *DatabaseIntent) Reset() {
	*x = DatabaseIntent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_database_postgres_database_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseIntent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseIntent) ProtoMessage() {}

func (x *DatabaseIntent) ProtoReflect() protoreflect.Message {
	mi := &file_library_database_postgres_database_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseIntent.ProtoReflect.Descriptor instead.
func (*DatabaseIntent) Descriptor() ([]byte, []int) {
	return file_library_database_postgres_database_proto_rawDescGZIP(), []int{0}
}

func (x *DatabaseIntent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DatabaseIntent) GetSchema() []*schema.FileContents {
	if x != nil {
		return x.Schema
	}
	return nil
}

type DatabaseInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cluster *ClusterInstance `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *DatabaseInstance) Reset() {
	*x = DatabaseInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_database_postgres_database_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseInstance) ProtoMessage() {}

func (x *DatabaseInstance) ProtoReflect() protoreflect.Message {
	mi := &file_library_database_postgres_database_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseInstance.ProtoReflect.Descriptor instead.
func (*DatabaseInstance) Descriptor() ([]byte, []int) {
	return file_library_database_postgres_database_proto_rawDescGZIP(), []int{1}
}

func (x *DatabaseInstance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DatabaseInstance) GetCluster() *ClusterInstance {
	if x != nil {
		return x.Cluster
	}
	return nil
}

var File_library_database_postgres_database_proto protoreflect.FileDescriptor

var file_library_database_postgres_database_proto_rawDesc = []byte{
	0x0a, 0x28, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x1a, 0x27, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x22, 0x6c, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x42, 0x38, 0x5a, 0x36, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6c, 0x61, 0x62,
	0x73, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_library_database_postgres_database_proto_rawDescOnce sync.Once
	file_library_database_postgres_database_proto_rawDescData = file_library_database_postgres_database_proto_rawDesc
)

func file_library_database_postgres_database_proto_rawDescGZIP() []byte {
	file_library_database_postgres_database_proto_rawDescOnce.Do(func() {
		file_library_database_postgres_database_proto_rawDescData = protoimpl.X.CompressGZIP(file_library_database_postgres_database_proto_rawDescData)
	})
	return file_library_database_postgres_database_proto_rawDescData
}

var file_library_database_postgres_database_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_library_database_postgres_database_proto_goTypes = []interface{}{
	(*DatabaseIntent)(nil),      // 0: library.database.postgres.DatabaseIntent
	(*DatabaseInstance)(nil),    // 1: library.database.postgres.DatabaseInstance
	(*schema.FileContents)(nil), // 2: foundation.schema.FileContents
	(*ClusterInstance)(nil),     // 3: library.database.postgres.ClusterInstance
}
var file_library_database_postgres_database_proto_depIdxs = []int32{
	2, // 0: library.database.postgres.DatabaseIntent.schema:type_name -> foundation.schema.FileContents
	3, // 1: library.database.postgres.DatabaseInstance.cluster:type_name -> library.database.postgres.ClusterInstance
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_library_database_postgres_database_proto_init() }
func file_library_database_postgres_database_proto_init() {
	if File_library_database_postgres_database_proto != nil {
		return
	}
	file_library_database_postgres_cluster_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_library_database_postgres_database_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseIntent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_database_postgres_database_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_library_database_postgres_database_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_library_database_postgres_database_proto_goTypes,
		DependencyIndexes: file_library_database_postgres_database_proto_depIdxs,
		MessageInfos:      file_library_database_postgres_database_proto_msgTypes,
	}.Build()
	File_library_database_postgres_database_proto = out.File
	file_library_database_postgres_database_proto_rawDesc = nil
	file_library_database_postgres_database_proto_goTypes = nil
	file_library_database_postgres_database_proto_depIdxs = nil
}
